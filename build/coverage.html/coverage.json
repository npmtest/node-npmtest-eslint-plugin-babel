{"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_eslint_plugin_babel */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/lib.npmtest_eslint_plugin_babel.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/lib.npmtest_eslint_plugin_babel.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":64}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":70}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_eslint_plugin_babel */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_eslint_plugin_babel = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_eslint_plugin_babel = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":63}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":77},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-eslint-plugin-babel && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_eslint_plugin_babel */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_eslint_plugin_babel","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_eslint_plugin_babel.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_eslint_plugin_babel.rollup.js'] =","            local.assetsDict['/assets.npmtest_eslint_plugin_babel.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_eslint_plugin_babel.__dirname + '/lib.npmtest_eslint_plugin_babel.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":30,"column":2}}},"branchMap":{},"code":["'use strict';","","module.exports = {","  rules: {","    'generator-star-spacing': require('./rules/generator-star-spacing'),","    'new-cap': require('./rules/new-cap'),","    'object-curly-spacing': require('./rules/object-curly-spacing'),","    'array-bracket-spacing': require('./rules/array-bracket-spacing'),","    'object-shorthand': require('./rules/object-shorthand'),","    'arrow-parens': require('./rules/arrow-parens'),","    'no-await-in-loop': require('./rules/no-await-in-loop'),","    'flow-object-type': require('./rules/flow-object-type'),","    'func-params-comma-dangle': require('./rules/func-params-comma-dangle'),","    'no-invalid-this': require('./rules/no-invalid-this'),","    'semi': require('./rules/semi'),","  },","  rulesConfig: {","    'generator-star-spacing': 0,","    'new-cap': 0,","    'object-curly-spacing': 0,","    'array-bracket-spacing': 0,","    'object-shorthand': 0,","    'arrow-parens': 0,","    'no-await-in-loop': 0,","    'flow-object-type': 0,","    'func-params-comma-dangle': 0,","    'no-invalid-this': 0,","    'semi': 0,","  }","};",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/generator-star-spacing.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/generator-star-spacing.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":12},"end":{"line":25,"column":23}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":21},"end":{"line":27,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":40,"column":2}},"3":{"start":{"line":26,"column":8},"end":{"line":38,"column":10}},"4":{"start":{"line":28,"column":16},"end":{"line":30,"column":17}},"5":{"start":{"line":29,"column":20},"end":{"line":29,"column":27}},"6":{"start":{"line":33,"column":16},"end":{"line":34,"column":85}},"7":{"start":{"line":36,"column":16},"end":{"line":36,"column":46}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":16},"end":{"line":28,"column":16}},{"start":{"line":28,"column":16},"end":{"line":28,"column":16}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":20},"end":{"line":28,"column":42}},{"start":{"line":28,"column":46},"end":{"line":28,"column":92}}]}},"code":["\"use strict\";","","var isWarnedForDeprecation = false;","module.exports = {","    meta: {","        deprecated: true,","        schema: [","            {","                \"oneOf\": [","                    {","                        \"enum\": [\"before\", \"after\", \"both\", \"neither\"]","                    },","                    {","                        \"type\": \"object\",","                        \"properties\": {","                            \"before\": {\"type\": \"boolean\"},","                            \"after\": {\"type\": \"boolean\"}","                        },","                        \"additionalProperties\": false","                    }","                ]","            }","        ]","    },","    create: function() {","        return {","            Program: function() {","                if (isWarnedForDeprecation || /\\=-(f|-format)=/.test(process.argv.join('='))) {","                    return;","                }","","                /* eslint-disable no-console */","                console.log('The babel/generator-star-spacing rule is deprecated. Please ' +","                            'use the built in generator-star-spacing rule instead.');","                /* eslint-enable no-console */","                isWarnedForDeprecation = true;","            }","        };","    }","};",""],"l":{"3":1,"4":1,"26":0,"28":0,"29":0,"33":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/new-cap.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/new-cap.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0],"26":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"checkArray","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":40}}},"2":{"name":"invert","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":26}}},"3":{"name":"calculateCapIsNewExceptions","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":45}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":17},"end":{"line":69,"column":35}}},"5":{"name":"extractNameFromExpression","line":90,"loc":{"start":{"line":90,"column":4},"end":{"line":90,"column":45}}},"6":{"name":"getCap","line":115,"loc":{"start":{"line":115,"column":4},"end":{"line":115,"column":25}}},"7":{"name":"isDecorator","line":136,"loc":{"start":{"line":136,"column":4},"end":{"line":136,"column":31}}},"8":{"name":"isCapAllowed","line":147,"loc":{"start":{"line":147,"column":4},"end":{"line":147,"column":56}}},"9":{"name":"report","line":165,"loc":{"start":{"line":165,"column":4},"end":{"line":165,"column":35}}},"10":{"name":"(anonymous_10)","line":180,"loc":{"start":{"line":180,"column":34},"end":{"line":180,"column":49}}},"11":{"name":"(anonymous_11)","line":194,"loc":{"start":{"line":194,"column":35},"end":{"line":194,"column":50}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":22,"column":2}},"2":{"start":{"line":31,"column":0},"end":{"line":37,"column":1}},"3":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"4":{"start":{"line":34,"column":8},"end":{"line":34,"column":69},"skip":true},"5":{"start":{"line":36,"column":4},"end":{"line":36,"column":32}},"6":{"start":{"line":45,"column":0},"end":{"line":48,"column":1}},"7":{"start":{"line":46,"column":4},"end":{"line":46,"column":20}},"8":{"start":{"line":47,"column":4},"end":{"line":47,"column":15}},"9":{"start":{"line":55,"column":0},"end":{"line":63,"column":1}},"10":{"start":{"line":56,"column":4},"end":{"line":56,"column":84}},"11":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"12":{"start":{"line":59,"column":8},"end":{"line":59,"column":69}},"13":{"start":{"line":62,"column":4},"end":{"line":62,"column":49}},"14":{"start":{"line":69,"column":0},"end":{"line":208,"column":2}},"15":{"start":{"line":71,"column":4},"end":{"line":71,"column":42}},"16":{"start":{"line":72,"column":4},"end":{"line":72,"column":47}},"17":{"start":{"line":73,"column":4},"end":{"line":73,"column":47}},"18":{"start":{"line":75,"column":4},"end":{"line":75,"column":93}},"19":{"start":{"line":77,"column":4},"end":{"line":77,"column":65}},"20":{"start":{"line":79,"column":4},"end":{"line":79,"column":23}},"21":{"start":{"line":90,"column":4},"end":{"line":107,"column":5}},"22":{"start":{"line":92,"column":8},"end":{"line":93,"column":21}},"23":{"start":{"line":95,"column":8},"end":{"line":105,"column":9}},"24":{"start":{"line":96,"column":12},"end":{"line":96,"column":44}},"25":{"start":{"line":98,"column":12},"end":{"line":102,"column":13}},"26":{"start":{"line":99,"column":16},"end":{"line":99,"column":38}},"27":{"start":{"line":100,"column":19},"end":{"line":102,"column":13}},"28":{"start":{"line":101,"column":16},"end":{"line":101,"column":37}},"29":{"start":{"line":104,"column":12},"end":{"line":104,"column":36}},"30":{"start":{"line":106,"column":8},"end":{"line":106,"column":20}},"31":{"start":{"line":115,"column":4},"end":{"line":129,"column":5}},"32":{"start":{"line":116,"column":8},"end":{"line":116,"column":38}},"33":{"start":{"line":118,"column":8},"end":{"line":118,"column":53}},"34":{"start":{"line":119,"column":8},"end":{"line":119,"column":53}},"35":{"start":{"line":121,"column":8},"end":{"line":128,"column":9}},"36":{"start":{"line":123,"column":12},"end":{"line":123,"column":31}},"37":{"start":{"line":124,"column":15},"end":{"line":128,"column":9}},"38":{"start":{"line":125,"column":12},"end":{"line":125,"column":27}},"39":{"start":{"line":127,"column":12},"end":{"line":127,"column":27}},"40":{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},"41":{"start":{"line":137,"column":8},"end":{"line":137,"column":48}},"42":{"start":{"line":147,"column":4},"end":{"line":157,"column":5}},"43":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"44":{"start":{"line":149,"column":12},"end":{"line":149,"column":24}},"45":{"start":{"line":151,"column":8},"end":{"line":155,"column":9}},"46":{"start":{"line":153,"column":12},"end":{"line":154,"column":51}},"47":{"start":{"line":156,"column":8},"end":{"line":156,"column":21}},"48":{"start":{"line":165,"column":4},"end":{"line":173,"column":5}},"49":{"start":{"line":166,"column":8},"end":{"line":166,"column":33}},"50":{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},"51":{"start":{"line":169,"column":12},"end":{"line":169,"column":37}},"52":{"start":{"line":172,"column":8},"end":{"line":172,"column":56}},"53":{"start":{"line":179,"column":4},"end":{"line":191,"column":5}},"54":{"start":{"line":180,"column":8},"end":{"line":190,"column":10}},"55":{"start":{"line":182,"column":12},"end":{"line":182,"column":66}},"56":{"start":{"line":183,"column":12},"end":{"line":189,"column":13}},"57":{"start":{"line":184,"column":16},"end":{"line":184,"column":61}},"58":{"start":{"line":185,"column":16},"end":{"line":185,"column":118}},"59":{"start":{"line":186,"column":16},"end":{"line":188,"column":17}},"60":{"start":{"line":187,"column":20},"end":{"line":187,"column":97}},"61":{"start":{"line":193,"column":4},"end":{"line":205,"column":5}},"62":{"start":{"line":194,"column":8},"end":{"line":204,"column":10}},"63":{"start":{"line":196,"column":12},"end":{"line":196,"column":61}},"64":{"start":{"line":197,"column":12},"end":{"line":203,"column":13}},"65":{"start":{"line":198,"column":16},"end":{"line":198,"column":56}},"66":{"start":{"line":199,"column":16},"end":{"line":199,"column":134}},"67":{"start":{"line":200,"column":16},"end":{"line":202,"column":17}},"68":{"start":{"line":201,"column":20},"end":{"line":201,"column":131}},"69":{"start":{"line":207,"column":4},"end":{"line":207,"column":21}},"70":{"start":{"line":210,"column":0},"end":{"line":235,"column":2}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4},"skip":true},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"2":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":54}},{"start":{"line":33,"column":58},"end":{"line":33,"column":82}}]},"3":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":11},"end":{"line":36,"column":19}},{"start":{"line":36,"column":23},"end":{"line":36,"column":31}}]},"4":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"5":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":17},"end":{"line":71,"column":35}},{"start":{"line":71,"column":39},"end":{"line":71,"column":41}}]},"6":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":8}},{"start":{"line":95,"column":8},"end":{"line":95,"column":8}}]},"7":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":12},"end":{"line":98,"column":12}},{"start":{"line":98,"column":12},"end":{"line":98,"column":12}}]},"8":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":16},"end":{"line":98,"column":43}},{"start":{"line":98,"column":48},"end":{"line":98,"column":82}}]},"9":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":19},"end":{"line":100,"column":19}},{"start":{"line":100,"column":19},"end":{"line":100,"column":19}}]},"10":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":23},"end":{"line":100,"column":53}},{"start":{"line":100,"column":57},"end":{"line":100,"column":78}}]},"11":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":8},"end":{"line":121,"column":8}},{"start":{"line":121,"column":8},"end":{"line":121,"column":8}}]},"12":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":15},"end":{"line":124,"column":15}},{"start":{"line":124,"column":15},"end":{"line":124,"column":15}}]},"13":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":8}},{"start":{"line":148,"column":8},"end":{"line":148,"column":8}}]},"14":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":12},"end":{"line":148,"column":34}},{"start":{"line":148,"column":38},"end":{"line":148,"column":80}}]},"15":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":151,"column":8}},{"start":{"line":151,"column":8},"end":{"line":151,"column":8}}]},"16":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":12},"end":{"line":151,"column":32}},{"start":{"line":151,"column":36},"end":{"line":151,"column":75}}]},"17":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":19},"end":{"line":153,"column":59}},{"start":{"line":154,"column":16},"end":{"line":154,"column":50}}]},"18":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":8},"end":{"line":168,"column":8}},{"start":{"line":168,"column":8},"end":{"line":168,"column":8}}]},"19":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"20":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":12},"end":{"line":183,"column":12}},{"start":{"line":183,"column":12},"end":{"line":183,"column":12}}]},"21":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":32},"end":{"line":185,"column":58}},{"start":{"line":185,"column":62},"end":{"line":185,"column":117}}]},"22":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":16},"end":{"line":186,"column":16}},{"start":{"line":186,"column":16},"end":{"line":186,"column":16}}]},"23":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"24":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":12},"end":{"line":197,"column":12}},{"start":{"line":197,"column":12},"end":{"line":197,"column":12}}]},"25":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":32},"end":{"line":199,"column":58}},{"start":{"line":199,"column":62},"end":{"line":199,"column":79}},{"start":{"line":199,"column":83},"end":{"line":199,"column":133}}]},"26":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":16},"end":{"line":200,"column":16}},{"start":{"line":200,"column":16},"end":{"line":200,"column":16}}]}},"code":["/**"," * @fileoverview Rule to flag use of constructors without capital letters"," * @author Nicholas C. Zakas"," * @copyright 2014 Jordan Harband. All rights reserved."," * @copyright 2013-2014 Nicholas C. Zakas. All rights reserved."," * @copyright 2015 Mathieu M-Gosselin. All rights reserved."," */","","\"use strict\";","","var CAPS_ALLOWED = [","    \"Array\",","    \"Boolean\",","    \"Date\",","    \"Error\",","    \"Function\",","    \"Number\",","    \"Object\",","    \"RegExp\",","    \"String\",","    \"Symbol\"","];","","/**"," * Ensure that if the key is provided, it must be an array."," * @param {Object} obj Object to check with `key`."," * @param {string} key Object key to check on `obj`."," * @param {*} fallback If obj[key] is not present, this will be returned."," * @returns {string[]} Returns obj[key] if it's an Array, otherwise `fallback`"," */","function checkArray(obj, key, fallback) {","    /* istanbul ignore if */","    if (Object.prototype.hasOwnProperty.call(obj, key) && !Array.isArray(obj[key])) {","        throw new TypeError(key + \", if provided, must be an Array\");","    }","    return obj[key] || fallback;","}","","/**"," * A reducer function to invert an array to an Object mapping the string form of the key, to `true`."," * @param {Object} map Accumulator object for the reduce."," * @param {string} key Object key to set to `true`."," * @returns {Object} Returns the updated Object for further reduction."," */","function invert(map, key) {","    map[key] = true;","    return map;","}","","/**"," * Creates an object with the cap is new exceptions as its keys and true as their values."," * @param {Object} config Rule configuration"," * @returns {Object} Object with cap is new exceptions."," */","function calculateCapIsNewExceptions(config) {","    var capIsNewExceptions = checkArray(config, \"capIsNewExceptions\", CAPS_ALLOWED);","","    if (capIsNewExceptions !== CAPS_ALLOWED) {","        capIsNewExceptions = capIsNewExceptions.concat(CAPS_ALLOWED);","    }","","    return capIsNewExceptions.reduce(invert, {});","}","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = function(context) {","","    var config = context.options[0] || {};","    var NEW_IS_CAP = config.newIsCap !== false;","    var CAP_IS_NEW = config.capIsNew !== false;","","    var newIsCapExceptions = checkArray(config, \"newIsCapExceptions\", []).reduce(invert, {});","","    var capIsNewExceptions = calculateCapIsNewExceptions(config);","","    var listeners = {};","","    //--------------------------------------------------------------------------","    // Helpers","    //--------------------------------------------------------------------------","","    /**","     * Get exact callee name from expression","     * @param {ASTNode} node CallExpression or NewExpression node","     * @returns {string} name","     */","    function extractNameFromExpression(node) {","","        var name = \"\",","            property;","","        if (node.callee.type === \"MemberExpression\") {","            property = node.callee.property;","","            if (property.type === \"Literal\" && (typeof property.value === \"string\")) {","                name = property.value;","            } else if (property.type === \"Identifier\" && !node.callee.computed) {","                name = property.name;","            }","        } else {","            name = node.callee.name;","        }","        return name;","    }","","    /**","     * Returns the capitalization state of the string -","     * Whether the first character is uppercase, lowercase, or non-alphabetic","     * @param {string} str String","     * @returns {string} capitalization state: \"non-alpha\", \"lower\", or \"upper\"","     */","    function getCap(str) {","        var firstChar = str.charAt(0);","","        var firstCharLower = firstChar.toLowerCase();","        var firstCharUpper = firstChar.toUpperCase();","","        if (firstCharLower === firstCharUpper) {","            // char has no uppercase variant, so it's non-alphabetic","            return \"non-alpha\";","        } else if (firstChar === firstCharLower) {","            return \"lower\";","        } else {","            return \"upper\";","        }","    }","","    /**","     * Returns whether a node is under a decorator or not.","     * @param  {ASTNode}  node CallExpression node","     * @returns {Boolean} Returns true if the node is under a decorator.","     */","    function isDecorator(node) {","        return node.parent.type === \"Decorator\";","    }","","    /**","     * Check if capitalization is allowed for a CallExpression","     * @param {Object} allowedMap Object mapping calleeName to a Boolean","     * @param {ASTNode} node CallExpression node","     * @param {string} calleeName Capitalized callee name from a CallExpression","     * @returns {Boolean} Returns true if the callee may be capitalized","     */","    function isCapAllowed(allowedMap, node, calleeName) {","        if (allowedMap[calleeName] || allowedMap[context.getSource(node.callee)]) {","            return true;","        }","        if (calleeName === \"UTC\" && node.callee.type === \"MemberExpression\") {","            // allow if callee is Date.UTC","            return node.callee.object.type === \"Identifier\" &&","                node.callee.object.name === \"Date\";","        }","        return false;","    }","","    /**","     * Reports the given message for the given node. The location will be the start of the property or the callee.","     * @param {ASTNode} node CallExpression or NewExpression node.","     * @param {string} message The message to report.","     * @returns {void}","     */","    function report(node, message) {","        var callee = node.callee;","","        if (callee.type === \"MemberExpression\") {","            callee = callee.property;","        }","","        context.report(node, callee.loc.start, message);","    }","","    //--------------------------------------------------------------------------","    // Public","    //--------------------------------------------------------------------------","","    if (NEW_IS_CAP) {","        listeners.NewExpression = function(node) {","","            var constructorName = extractNameFromExpression(node);","            if (constructorName) {","                var capitalization = getCap(constructorName);","                var isAllowed = capitalization !== \"lower\" || isCapAllowed(newIsCapExceptions, node, constructorName);","                if (!isAllowed) {","                    report(node, \"A constructor name should not start with a lowercase letter.\");","                }","            }","        };","    }","","    if (CAP_IS_NEW) {","        listeners.CallExpression = function(node) {","","            var calleeName = extractNameFromExpression(node);","            if (calleeName) {","                var capitalization = getCap(calleeName);","                var isAllowed = capitalization !== \"upper\" || isDecorator(node) || isCapAllowed(capIsNewExceptions, node, calleeName);","                if (!isAllowed) {","                    report(node, \"A function with a name starting with an uppercase letter should only be used as a constructor.\");","                }","            }","        };","    }","","    return listeners;","};","","module.exports.schema = [","    {","        \"type\": \"object\",","        \"properties\": {","            \"newIsCap\": {","                \"type\": \"boolean\"","            },","            \"capIsNew\": {","                \"type\": \"boolean\"","            },","            \"newIsCapExceptions\": {","                \"type\": \"array\",","                \"items\": {","                    \"type\": \"string\"","                }","            },","            \"capIsNewExceptions\": {","                \"type\": \"array\",","                \"items\": {","                    \"type\": \"string\"","                }","            }","        },","        \"additionalProperties\": false","    }","];",""],"l":{"11":1,"31":1,"33":0,"34":1,"36":0,"45":1,"46":0,"47":0,"55":1,"56":0,"58":0,"59":0,"62":0,"69":1,"71":0,"72":0,"73":0,"75":0,"77":0,"79":0,"90":1,"92":0,"95":0,"96":0,"98":0,"99":0,"100":0,"101":0,"104":0,"106":0,"115":1,"116":0,"118":0,"119":0,"121":0,"123":0,"124":0,"125":0,"127":0,"136":1,"137":0,"147":1,"148":0,"149":0,"151":0,"153":0,"156":0,"165":1,"166":0,"168":0,"169":0,"172":0,"179":0,"180":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"193":0,"194":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"207":0,"210":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/object-curly-spacing.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/object-curly-spacing.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":1,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":17},"end":{"line":18,"column":35}}},"2":{"name":"isOptionSet","line":29,"loc":{"start":{"line":29,"column":4},"end":{"line":29,"column":33}}},"3":{"name":"isSpaced","line":49,"loc":{"start":{"line":49,"column":4},"end":{"line":49,"column":35}}},"4":{"name":"isSameLine","line":59,"loc":{"start":{"line":59,"column":4},"end":{"line":59,"column":37}}},"5":{"name":"reportNoBeginningSpace","line":69,"loc":{"start":{"line":69,"column":4},"end":{"line":69,"column":49}}},"6":{"name":"(anonymous_6)","line":74,"loc":{"start":{"line":74,"column":17},"end":{"line":74,"column":33}}},"7":{"name":"reportNoEndingSpace","line":87,"loc":{"start":{"line":87,"column":4},"end":{"line":87,"column":46}}},"8":{"name":"(anonymous_8)","line":92,"loc":{"start":{"line":92,"column":17},"end":{"line":92,"column":33}}},"9":{"name":"reportRequiredBeginningSpace","line":105,"loc":{"start":{"line":105,"column":4},"end":{"line":105,"column":55}}},"10":{"name":"(anonymous_10)","line":110,"loc":{"start":{"line":110,"column":17},"end":{"line":110,"column":33}}},"11":{"name":"reportRequiredEndingSpace","line":122,"loc":{"start":{"line":122,"column":4},"end":{"line":122,"column":52}}},"12":{"name":"(anonymous_12)","line":127,"loc":{"start":{"line":127,"column":17},"end":{"line":127,"column":33}}},"13":{"name":"validateBraceSpacing","line":142,"loc":{"start":{"line":142,"column":4},"end":{"line":142,"column":74}}},"14":{"name":"checkForObject","line":172,"loc":{"start":{"line":172,"column":4},"end":{"line":172,"column":34}}},"15":{"name":"checkForImport","line":199,"loc":{"start":{"line":199,"column":4},"end":{"line":199,"column":34}}},"16":{"name":"checkForExport","line":233,"loc":{"start":{"line":233,"column":4},"end":{"line":233,"column":34}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":278,"column":2}},"2":{"start":{"line":19,"column":4},"end":{"line":20,"column":45}},"3":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"4":{"start":{"line":30,"column":8},"end":{"line":30,"column":91}},"5":{"start":{"line":33,"column":4},"end":{"line":37,"column":6}},"6":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"7":{"start":{"line":50,"column":8},"end":{"line":50,"column":60}},"8":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"9":{"start":{"line":60,"column":8},"end":{"line":60,"column":60}},"10":{"start":{"line":69,"column":4},"end":{"line":79,"column":5}},"11":{"start":{"line":70,"column":8},"end":{"line":78,"column":11}},"12":{"start":{"line":75,"column":16},"end":{"line":75,"column":64}},"13":{"start":{"line":76,"column":16},"end":{"line":76,"column":79}},"14":{"start":{"line":87,"column":4},"end":{"line":97,"column":5}},"15":{"start":{"line":88,"column":8},"end":{"line":96,"column":11}},"16":{"start":{"line":93,"column":16},"end":{"line":93,"column":69}},"17":{"start":{"line":94,"column":16},"end":{"line":94,"column":83}},"18":{"start":{"line":105,"column":4},"end":{"line":114,"column":5}},"19":{"start":{"line":106,"column":8},"end":{"line":113,"column":11}},"20":{"start":{"line":111,"column":16},"end":{"line":111,"column":57}},"21":{"start":{"line":122,"column":4},"end":{"line":131,"column":5}},"22":{"start":{"line":123,"column":8},"end":{"line":130,"column":11}},"23":{"start":{"line":128,"column":16},"end":{"line":128,"column":58}},"24":{"start":{"line":142,"column":4},"end":{"line":165,"column":5}},"25":{"start":{"line":143,"column":8},"end":{"line":146,"column":51}},"26":{"start":{"line":148,"column":8},"end":{"line":155,"column":9}},"27":{"start":{"line":149,"column":12},"end":{"line":151,"column":13}},"28":{"start":{"line":150,"column":16},"end":{"line":150,"column":58}},"29":{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},"30":{"start":{"line":153,"column":16},"end":{"line":153,"column":52}},"31":{"start":{"line":157,"column":8},"end":{"line":164,"column":9}},"32":{"start":{"line":158,"column":12},"end":{"line":160,"column":13}},"33":{"start":{"line":159,"column":16},"end":{"line":159,"column":54}},"34":{"start":{"line":161,"column":12},"end":{"line":163,"column":13}},"35":{"start":{"line":162,"column":16},"end":{"line":162,"column":48}},"36":{"start":{"line":172,"column":4},"end":{"line":192,"column":5}},"37":{"start":{"line":173,"column":8},"end":{"line":175,"column":9}},"38":{"start":{"line":174,"column":12},"end":{"line":174,"column":19}},"39":{"start":{"line":177,"column":8},"end":{"line":178,"column":72}},"40":{"start":{"line":180,"column":8},"end":{"line":181,"column":59}},"41":{"start":{"line":184,"column":8},"end":{"line":186,"column":9}},"42":{"start":{"line":185,"column":12},"end":{"line":185,"column":50}},"43":{"start":{"line":188,"column":8},"end":{"line":189,"column":58}},"44":{"start":{"line":191,"column":8},"end":{"line":191,"column":69}},"45":{"start":{"line":199,"column":4},"end":{"line":226,"column":5}},"46":{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},"47":{"start":{"line":201,"column":12},"end":{"line":201,"column":19}},"48":{"start":{"line":204,"column":8},"end":{"line":205,"column":72}},"49":{"start":{"line":207,"column":8},"end":{"line":209,"column":9}},"50":{"start":{"line":208,"column":12},"end":{"line":208,"column":19}},"51":{"start":{"line":210,"column":8},"end":{"line":212,"column":9}},"52":{"start":{"line":211,"column":12},"end":{"line":211,"column":48}},"53":{"start":{"line":214,"column":8},"end":{"line":215,"column":59}},"54":{"start":{"line":218,"column":8},"end":{"line":220,"column":9}},"55":{"start":{"line":219,"column":12},"end":{"line":219,"column":50}},"56":{"start":{"line":222,"column":8},"end":{"line":223,"column":58}},"57":{"start":{"line":225,"column":8},"end":{"line":225,"column":69}},"58":{"start":{"line":233,"column":4},"end":{"line":258,"column":5}},"59":{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},"60":{"start":{"line":235,"column":12},"end":{"line":235,"column":19}},"61":{"start":{"line":238,"column":8},"end":{"line":241,"column":59}},"62":{"start":{"line":245,"column":8},"end":{"line":247,"column":9}},"63":{"start":{"line":246,"column":12},"end":{"line":246,"column":19}},"64":{"start":{"line":250,"column":8},"end":{"line":252,"column":9}},"65":{"start":{"line":251,"column":12},"end":{"line":251,"column":50}},"66":{"start":{"line":254,"column":8},"end":{"line":255,"column":58}},"67":{"start":{"line":257,"column":8},"end":{"line":257,"column":69}},"68":{"start":{"line":264,"column":4},"end":{"line":276,"column":6}},"69":{"start":{"line":280,"column":0},"end":{"line":296,"column":2}}},"branchMap":{"1":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":44},"end":{"line":30,"column":82}},{"start":{"line":30,"column":85},"end":{"line":30,"column":90}}]},"2":{"line":144,"type":"cond-expr","locations":[{"start":{"line":146,"column":18},"end":{"line":146,"column":33}},{"start":{"line":146,"column":36},"end":{"line":146,"column":50}}]},"3":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":12},"end":{"line":144,"column":44}},{"start":{"line":144,"column":48},"end":{"line":144,"column":73}},{"start":{"line":145,"column":12},"end":{"line":145,"column":45}},{"start":{"line":145,"column":49},"end":{"line":145,"column":74}}]},"4":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":8}},{"start":{"line":148,"column":8},"end":{"line":148,"column":8}}]},"5":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":12},"end":{"line":149,"column":12}},{"start":{"line":149,"column":12},"end":{"line":149,"column":12}}]},"6":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":16},"end":{"line":149,"column":30}},{"start":{"line":149,"column":34},"end":{"line":149,"column":58}}]},"7":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":12},"end":{"line":152,"column":12}},{"start":{"line":152,"column":12},"end":{"line":152,"column":12}}]},"8":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":16},"end":{"line":152,"column":31}},{"start":{"line":152,"column":35},"end":{"line":152,"column":58}}]},"9":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":157,"column":8}},{"start":{"line":157,"column":8},"end":{"line":157,"column":8}}]},"10":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":12},"end":{"line":158,"column":12}},{"start":{"line":158,"column":12},"end":{"line":158,"column":12}}]},"11":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":16},"end":{"line":158,"column":45}},{"start":{"line":158,"column":49},"end":{"line":158,"column":77}}]},"12":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":12},"end":{"line":161,"column":12}},{"start":{"line":161,"column":12},"end":{"line":161,"column":12}}]},"13":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":16},"end":{"line":161,"column":46}},{"start":{"line":161,"column":50},"end":{"line":161,"column":77}}]},"14":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":8},"end":{"line":173,"column":8}},{"start":{"line":173,"column":8},"end":{"line":173,"column":8}}]},"15":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":8},"end":{"line":184,"column":8}},{"start":{"line":184,"column":8},"end":{"line":184,"column":8}}]},"16":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":8},"end":{"line":200,"column":8}},{"start":{"line":200,"column":8},"end":{"line":200,"column":8}}]},"17":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":8}},{"start":{"line":207,"column":8},"end":{"line":207,"column":8}}]},"18":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":8},"end":{"line":210,"column":8}},{"start":{"line":210,"column":8},"end":{"line":210,"column":8}}]},"19":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":8},"end":{"line":218,"column":8}},{"start":{"line":218,"column":8},"end":{"line":218,"column":8}}]},"20":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":8},"end":{"line":234,"column":8}},{"start":{"line":234,"column":8},"end":{"line":234,"column":8}}]},"21":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":8},"end":{"line":245,"column":8}},{"start":{"line":245,"column":8},"end":{"line":245,"column":8}}]},"22":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":8},"end":{"line":250,"column":8}},{"start":{"line":250,"column":8},"end":{"line":250,"column":8}}]}},"code":["/**"," * @fileoverview Disallows or enforces spaces inside of object literals."," * @author Jamund Ferguson"," * @copyright 2014 Brandyn Bennett. All rights reserved."," * @copyright 2014 Michael Ficarra. No rights reserved."," * @copyright 2014 Vignesh Anand. All rights reserved."," * @copyright 2015 Jamund Ferguson. All rights reserved."," * @copyright 2015 Mathieu M-Gosselin. All rights reserved."," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\";","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = function(context) {","    var spaced = context.options[0] === \"always\",","        sourceCode = context.getSourceCode();","","    /**","     * Determines whether an option is set, relative to the spacing option.","     * If spaced is \"always\", then check whether option is set to false.","     * If spaced is \"never\", then check whether option is set to true.","     * @param {Object} option - The option to exclude.","     * @returns {boolean} Whether or not the property is excluded.","     */","    function isOptionSet(option) {","        return context.options[1] != null ? context.options[1][option] === !spaced : false;","    }","","    var options = {","        spaced: spaced,","        arraysInObjectsException: isOptionSet(\"arraysInObjects\"),","        objectsInObjectsException: isOptionSet(\"objectsInObjects\")","    };","","    //--------------------------------------------------------------------------","    // Helpers","    //--------------------------------------------------------------------------","","    /**","     * Determines whether two adjacent tokens are have whitespace between them.","     * @param {Object} left - The left token object.","     * @param {Object} right - The right token object.","     * @returns {boolean} Whether or not there is space between the tokens.","     */","    function isSpaced(left, right) {","        return sourceCode.isSpaceBetweenTokens(left, right);","    }","","    /**","     * Determines whether two adjacent tokens are on the same line.","     * @param {Object} left - The left token object.","     * @param {Object} right - The right token object.","     * @returns {boolean} Whether or not the tokens are on the same line.","     */","    function isSameLine(left, right) {","        return left.loc.start.line === right.loc.start.line;","    }","","    /**","    * Reports that there shouldn't be a space after the first token","    * @param {ASTNode} node - The node to report in the event of an error.","    * @param {Token} token - The token to use for the report.","    * @returns {void}","    */","    function reportNoBeginningSpace(node, token) {","        context.report({","            node: node,","            loc: token.loc.end,","            message: \"There should be no space after '\" + token.value + \"'\",","            fix: function(fixer) {","                var nextToken = sourceCode.getTokenAfter(token);","                return fixer.removeRange([token.range[1], nextToken.range[0]]);","            }","        });","    }","","    /**","    * Reports that there shouldn't be a space before the last token","    * @param {ASTNode} node - The node to report in the event of an error.","    * @param {Token} token - The token to use for the report.","    * @returns {void}","    */","    function reportNoEndingSpace(node, token) {","        context.report({","            node: node,","            loc: token.loc.start,","            message: \"There should be no space before '\" + token.value + \"'\",","            fix: function(fixer) {","                var previousToken = sourceCode.getTokenBefore(token);","                return fixer.removeRange([previousToken.range[1], token.range[0]]);","            }","        });","    }","","    /**","    * Reports that there should be a space after the first token","    * @param {ASTNode} node - The node to report in the event of an error.","    * @param {Token} token - The token to use for the report.","    * @returns {void}","    */","    function reportRequiredBeginningSpace(node, token) {","        context.report({","            node: node,","            loc: token.loc.end,","            message: \"A space is required after '\" + token.value + \"'\",","            fix: function(fixer) {","                return fixer.insertTextAfter(token, \" \");","            }","        });","    }","","    /**","    * Reports that there should be a space before the last token","    * @param {ASTNode} node - The node to report in the event of an error.","    * @param {Token} token - The token to use for the report.","    * @returns {void}","    */","    function reportRequiredEndingSpace(node, token) {","        context.report({","            node: node,","            loc: token.loc.start,","            message: \"A space is required before '\" + token.value + \"'\",","            fix: function(fixer) {","                return fixer.insertTextBefore(token, \" \");","            }","        });","    }","","    /**","     * Determines if spacing in curly braces is valid.","     * @param {ASTNode} node The AST node to check.","     * @param {Token} first The first token to check (should be the opening brace)","     * @param {Token} second The second token to check (should be first after the opening brace)","     * @param {Token} penultimate The penultimate token to check (should be last before closing brace)","     * @param {Token} last The last token to check (should be closing brace)","     * @returns {void}","     */","    function validateBraceSpacing(node, first, second, penultimate, last) {","        var closingCurlyBraceMustBeSpaced =","            options.arraysInObjectsException && penultimate.value === \"]\" ||","            options.objectsInObjectsException && penultimate.value === \"}\"","                ? !options.spaced : options.spaced;","","        if (isSameLine(first, second)) {","            if (options.spaced && !isSpaced(first, second)) {","                reportRequiredBeginningSpace(node, first);","            }","            if (!options.spaced && isSpaced(first, second)) {","                reportNoBeginningSpace(node, first);","            }","        }","","        if (isSameLine(penultimate, last)) {","            if (closingCurlyBraceMustBeSpaced && !isSpaced(penultimate, last)) {","                reportRequiredEndingSpace(node, last);","            }","            if (!closingCurlyBraceMustBeSpaced && isSpaced(penultimate, last)) {","                reportNoEndingSpace(node, last);","            }","        }","    }","","    /**","     * Reports a given object node if spacing in curly braces is invalid.","     * @param {ASTNode} node - An ObjectExpression or ObjectPattern node to check.","     * @returns {void}","     */","    function checkForObject(node) {","        if (node.properties.length === 0) {","            return;","        }","","        var firstSpecifier = node.properties[0],","            lastSpecifier = node.properties[node.properties.length - 1];","","        var first = sourceCode.getTokenBefore(firstSpecifier),","            last = sourceCode.getTokenAfter(lastSpecifier);","","        // support trailing commas","        if (last.value === \",\") {","            last = sourceCode.getTokenAfter(last);","        }","","        var second = sourceCode.getTokenAfter(first),","            penultimate = sourceCode.getTokenBefore(last);","","        validateBraceSpacing(node, first, second, penultimate, last);","    }","","    /**","     * Reports a given import node if spacing in curly braces is invalid.","     * @param {ASTNode} node - An ImportDeclaration node to check.","     * @returns {void}","     */","    function checkForImport(node) {","        if (node.specifiers.length === 0) {","            return;","        }","","        var firstSpecifier = node.specifiers[0],","            lastSpecifier = node.specifiers[node.specifiers.length - 1];","","        if (lastSpecifier.type !== \"ImportSpecifier\") {","            return;","        }","        if (firstSpecifier.type !== \"ImportSpecifier\") {","            firstSpecifier = node.specifiers[1];","        }","","        var first = sourceCode.getTokenBefore(firstSpecifier),","            last = sourceCode.getTokenAfter(lastSpecifier);","","        // to support a trailing comma.","        if (last.value === \",\") {","            last = sourceCode.getTokenAfter(last);","        }","","        var second = sourceCode.getTokenAfter(first),","            penultimate = sourceCode.getTokenBefore(last);","","        validateBraceSpacing(node, first, second, penultimate, last);","    }","","    /**","     * Reports a given export node if spacing in curly braces is invalid.","     * @param {ASTNode} node - An ExportNamedDeclaration node to check.","     * @returns {void}","     */","    function checkForExport(node) {","        if (node.specifiers.length === 0) {","            return;","        }","","        var firstSpecifier = node.specifiers[0],","            lastSpecifier = node.specifiers[node.specifiers.length - 1],","            first = sourceCode.getTokenBefore(firstSpecifier),","            last = sourceCode.getTokenAfter(lastSpecifier);","","        // export * as x from '...';","        // export x from '...';","        if (first.value === \"export\") {","            return;","        }","","        // to support a trailing comma.","        if (last.value === \",\") {","            last = sourceCode.getTokenAfter(last);","        }","","        var second = sourceCode.getTokenAfter(first),","            penultimate = sourceCode.getTokenBefore(last);","","        validateBraceSpacing(node, first, second, penultimate, last);","    }","","    //--------------------------------------------------------------------------","    // Public","    //--------------------------------------------------------------------------","","    return {","        // var {x} = y;","        ObjectPattern: checkForObject,","","        // var y = {x: 'y'}","        ObjectExpression: checkForObject,","","        // import {y} from 'x';","        ImportDeclaration: checkForImport,","","        // export {name} from 'yo';","        ExportNamedDeclaration: checkForExport","    };","","};","","module.exports.schema = [","    {","        \"enum\": [\"always\", \"never\"]","    },","    {","        \"type\": \"object\",","        \"properties\": {","            \"arraysInObjects\": {","                \"type\": \"boolean\"","            },","            \"objectsInObjects\": {","                \"type\": \"boolean\"","            }","        },","        \"additionalProperties\": false","    }","];",""],"l":{"18":1,"19":0,"29":1,"30":0,"33":0,"49":1,"50":0,"59":1,"60":0,"69":1,"70":0,"75":0,"76":0,"87":1,"88":0,"93":0,"94":0,"105":1,"106":0,"111":0,"122":1,"123":0,"128":0,"142":1,"143":0,"148":0,"149":0,"150":0,"152":0,"153":0,"157":0,"158":0,"159":0,"161":0,"162":0,"172":1,"173":0,"174":0,"177":0,"180":0,"184":0,"185":0,"188":0,"191":0,"199":1,"200":0,"201":0,"204":0,"207":0,"208":0,"210":0,"211":0,"214":0,"218":0,"219":0,"222":0,"225":0,"233":1,"234":0,"235":0,"238":0,"245":0,"246":0,"250":0,"251":0,"254":0,"257":0,"264":0,"280":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/array-bracket-spacing.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/array-bracket-spacing.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":28,"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":23}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":21},"end":{"line":30,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":43,"column":2}},"3":{"start":{"line":29,"column":8},"end":{"line":41,"column":10}},"4":{"start":{"line":31,"column":16},"end":{"line":33,"column":17}},"5":{"start":{"line":32,"column":20},"end":{"line":32,"column":27}},"6":{"start":{"line":36,"column":16},"end":{"line":37,"column":84}},"7":{"start":{"line":39,"column":16},"end":{"line":39,"column":46}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":16},"end":{"line":31,"column":16}},{"start":{"line":31,"column":16},"end":{"line":31,"column":16}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":20},"end":{"line":31,"column":42}},{"start":{"line":31,"column":46},"end":{"line":31,"column":92}}]}},"code":["\"use strict\";","","var isWarnedForDeprecation = false;","module.exports = {","    meta: {","        deprecated: true,","        schema: [","            {","                \"enum\": [\"always\", \"never\"]","            },","            {","                \"type\": \"object\",","                \"properties\": {","                    \"singleValue\": {","                        \"type\": \"boolean\"","                    },","                    \"objectsInArrays\": {","                        \"type\": \"boolean\"","                    },","                    \"arraysInArrays\": {","                        \"type\": \"boolean\"","                    }","                },","                \"additionalProperties\": false","            }","        ]","    },","    create: function() {","        return {","            Program: function() {","                if (isWarnedForDeprecation || /\\=-(f|-format)=/.test(process.argv.join('='))) {","                    return;","                }","","                /* eslint-disable no-console */","                console.log('The babel/array-bracket-spacing rule is deprecated. Please ' +","                            'use the built in array-bracket-spacing rule instead.');","                /* eslint-enable no-console */","                isWarnedForDeprecation = true;","            }","        };","    }","};",""],"l":{"3":1,"4":1,"29":0,"31":0,"32":0,"36":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/object-shorthand.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/object-shorthand.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":12},"end":{"line":13,"column":23}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":21},"end":{"line":15,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":28,"column":2}},"3":{"start":{"line":14,"column":8},"end":{"line":26,"column":10}},"4":{"start":{"line":16,"column":16},"end":{"line":18,"column":17}},"5":{"start":{"line":17,"column":20},"end":{"line":17,"column":27}},"6":{"start":{"line":21,"column":16},"end":{"line":22,"column":79}},"7":{"start":{"line":24,"column":16},"end":{"line":24,"column":46}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":16},"end":{"line":16,"column":16}},{"start":{"line":16,"column":16},"end":{"line":16,"column":16}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":20},"end":{"line":16,"column":42}},{"start":{"line":16,"column":46},"end":{"line":16,"column":92}}]}},"code":["\"use strict\";","","var isWarnedForDeprecation = false;","module.exports = {","    meta: {","        deprecated: true,","        schema: [","            {","                \"enum\": [\"always\", \"methods\", \"properties\", \"never\"]","            }","        ]","    },","    create: function() {","        return {","            Program: function() {","                if (isWarnedForDeprecation || /\\=-(f|-format)=/.test(process.argv.join('='))) {","                    return;","                }","","                /* eslint-disable no-console */","                console.log('The babel/object-shorthand rule is deprecated. Please ' +","                            'use the built in object-shorthand rule instead.');","                /* eslint-enable no-console */","                isWarnedForDeprecation = true;","            }","        };","    }","};",""],"l":{"3":1,"4":1,"14":0,"16":0,"17":0,"21":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/arrow-parens.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/arrow-parens.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":12},"end":{"line":13,"column":23}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":21},"end":{"line":15,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":28,"column":2}},"3":{"start":{"line":14,"column":8},"end":{"line":26,"column":10}},"4":{"start":{"line":16,"column":16},"end":{"line":18,"column":17}},"5":{"start":{"line":17,"column":20},"end":{"line":17,"column":27}},"6":{"start":{"line":21,"column":16},"end":{"line":22,"column":75}},"7":{"start":{"line":24,"column":16},"end":{"line":24,"column":46}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":16},"end":{"line":16,"column":16}},{"start":{"line":16,"column":16},"end":{"line":16,"column":16}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":20},"end":{"line":16,"column":42}},{"start":{"line":16,"column":46},"end":{"line":16,"column":92}}]}},"code":["\"use strict\";","","var isWarnedForDeprecation = false;","module.exports = {","    meta: {","        deprecated: true,","        schema: [","            {","                \"enum\": [\"always\", \"as-needed\"]","            }","        ]","    },","    create: function() {","        return {","            Program: function() {","                if (isWarnedForDeprecation || /\\=-(f|-format)=/.test(process.argv.join('='))) {","                    return;","                }","","                /* eslint-disable no-console */","                console.log('The babel/arrow-parens rule is deprecated. Please ' +","                            'use the built in arrow-parens rule instead.');","                /* eslint-enable no-console */","                isWarnedForDeprecation = true;","            }","        };","    }","};",""],"l":{"3":1,"4":1,"14":0,"16":0,"17":0,"21":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/no-await-in-loop.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/no-await-in-loop.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":12},"end":{"line":9,"column":23}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":21},"end":{"line":11,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":24,"column":2}},"3":{"start":{"line":10,"column":8},"end":{"line":22,"column":10}},"4":{"start":{"line":12,"column":16},"end":{"line":14,"column":17}},"5":{"start":{"line":13,"column":20},"end":{"line":13,"column":27}},"6":{"start":{"line":17,"column":16},"end":{"line":18,"column":79}},"7":{"start":{"line":20,"column":16},"end":{"line":20,"column":46}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":16},"end":{"line":12,"column":16}},{"start":{"line":12,"column":16},"end":{"line":12,"column":16}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":20},"end":{"line":12,"column":42}},{"start":{"line":12,"column":46},"end":{"line":12,"column":92}}]}},"code":["\"use strict\";","","var isWarnedForDeprecation = false;","module.exports = {","    meta: {","        deprecated: true,","        schema: []","    },","    create: function() {","        return {","            Program: function() {","                if (isWarnedForDeprecation || /\\=-(f|-format)=/.test(process.argv.join('='))) {","                    return;","                }","","                /* eslint-disable no-console */","                console.log('The babel/no-await-in-loop rule is deprecated. Please ' +","                            'use the built in no-await-in-loop rule instead.');","                /* eslint-enable no-console */","                isWarnedForDeprecation = true;","            }","        };","    }","};",""],"l":{"3":1,"4":1,"10":0,"12":0,"13":0,"17":0,"20":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/flow-object-type.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/flow-object-type.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":12},"end":{"line":13,"column":23}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":21},"end":{"line":15,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":29,"column":2}},"3":{"start":{"line":14,"column":8},"end":{"line":27,"column":10}},"4":{"start":{"line":16,"column":16},"end":{"line":18,"column":17}},"5":{"start":{"line":17,"column":20},"end":{"line":17,"column":27}},"6":{"start":{"line":21,"column":16},"end":{"line":23,"column":140}},"7":{"start":{"line":25,"column":16},"end":{"line":25,"column":46}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":16},"end":{"line":16,"column":16}},{"start":{"line":16,"column":16},"end":{"line":16,"column":16}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":20},"end":{"line":16,"column":42}},{"start":{"line":16,"column":46},"end":{"line":16,"column":92}}]}},"code":["\"use strict\";","","var isWarnedForDeprecation = false;","module.exports = {","    meta: {","        deprecated: true,","        schema: [","            {","                \"enum\": [\"semicolon\", \"comma\"],","            }","        ]","    },","    create: function() {","        return {","            Program: function() {","                if (isWarnedForDeprecation || /\\=-(f|-format)=/.test(process.argv.join('='))) {","                    return;","                }","","                /* eslint-disable no-console */","                console.log('The babel/flow-object-type rule is deprecated. Please ' +","                            'use the flowtype/object-type-delimiter rule instead.\\n' +","                            'Check out https://github.com/gajus/eslint-plugin-flowtype#eslint-plugin-flowtype-rules-object-type-delimiter');","                /* eslint-enable no-console */","                isWarnedForDeprecation = true;","            }","        };","    }","};",""],"l":{"3":1,"4":1,"14":0,"16":0,"17":0,"21":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/func-params-comma-dangle.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/func-params-comma-dangle.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":12},"end":{"line":13,"column":23}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":21},"end":{"line":15,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":28,"column":2}},"3":{"start":{"line":14,"column":8},"end":{"line":26,"column":10}},"4":{"start":{"line":16,"column":16},"end":{"line":18,"column":17}},"5":{"start":{"line":17,"column":20},"end":{"line":17,"column":27}},"6":{"start":{"line":21,"column":16},"end":{"line":22,"column":75}},"7":{"start":{"line":24,"column":16},"end":{"line":24,"column":46}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":16},"end":{"line":16,"column":16}},{"start":{"line":16,"column":16},"end":{"line":16,"column":16}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":20},"end":{"line":16,"column":42}},{"start":{"line":16,"column":46},"end":{"line":16,"column":92}}]}},"code":["'use strict';","","var isWarnedForDeprecation = false;","module.exports = {","    meta: {","        deprecated: true,","        schema: [","            {","                \"enum\": [\"always\", \"always-multiline\", \"only-multiline\", \"never\"]","            }","        ]","    },","    create: function() {","        return {","            Program: function() {","                if (isWarnedForDeprecation || /\\=-(f|-format)=/.test(process.argv.join('='))) {","                    return;","                }","","                /* eslint-disable no-console */","                console.log('The babel/func-params-comma-dangle rule is deprecated. Please ' +","                            'use the built in comma-dangle rule instead.');","                /* eslint-enable no-console */","                isWarnedForDeprecation = true;","            }","        };","    }","};",""],"l":{"3":1,"4":1,"14":0,"16":0,"17":0,"21":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/no-invalid-this.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/no-invalid-this.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0],"4":[0,0],"5":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":29,"loc":{"start":{"line":29,"column":10},"end":{"line":29,"column":20}}},"2":{"name":"(anonymous_2)","line":44,"loc":{"start":{"line":44,"column":27},"end":{"line":44,"column":38}}},"3":{"name":"enterClassProperty","line":61,"loc":{"start":{"line":61,"column":8},"end":{"line":61,"column":38}}},"4":{"name":"exitClassProperty","line":69,"loc":{"start":{"line":69,"column":8},"end":{"line":69,"column":37}}},"5":{"name":"enterFunction","line":83,"loc":{"start":{"line":83,"column":8},"end":{"line":83,"column":37}}},"6":{"name":"exitFunction","line":97,"loc":{"start":{"line":97,"column":8},"end":{"line":97,"column":32}}},"7":{"name":"(anonymous_7)","line":107,"loc":{"start":{"line":107,"column":19},"end":{"line":107,"column":26}}},"8":{"name":"(anonymous_8)","line":122,"loc":{"start":{"line":122,"column":26},"end":{"line":122,"column":29}}},"9":{"name":"(anonymous_9)","line":134,"loc":{"start":{"line":134,"column":26},"end":{"line":134,"column":33}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"2":{"start":{"line":18,"column":0},"end":{"line":143,"column":2}},"3":{"start":{"line":30,"column":8},"end":{"line":31,"column":49}},"4":{"start":{"line":33,"column":8},"end":{"line":33,"column":40}},"5":{"start":{"line":44,"column":8},"end":{"line":54,"column":10}},"6":{"start":{"line":45,"column":12},"end":{"line":45,"column":50}},"7":{"start":{"line":47,"column":12},"end":{"line":52,"column":13}},"8":{"start":{"line":48,"column":16},"end":{"line":48,"column":36}},"9":{"start":{"line":49,"column":16},"end":{"line":51,"column":32}},"10":{"start":{"line":53,"column":12},"end":{"line":53,"column":27}},"11":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"12":{"start":{"line":62,"column":12},"end":{"line":62,"column":39}},"13":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"14":{"start":{"line":70,"column":12},"end":{"line":70,"column":40}},"15":{"start":{"line":83,"column":8},"end":{"line":91,"column":9}},"16":{"start":{"line":86,"column":12},"end":{"line":90,"column":15}},"17":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"18":{"start":{"line":98,"column":12},"end":{"line":98,"column":24}},"19":{"start":{"line":101,"column":8},"end":{"line":141,"column":10}},"20":{"start":{"line":108,"column":16},"end":{"line":109,"column":72}},"21":{"start":{"line":111,"column":16},"end":{"line":119,"column":19}},"22":{"start":{"line":123,"column":16},"end":{"line":123,"column":28}},"23":{"start":{"line":135,"column":16},"end":{"line":135,"column":51}},"24":{"start":{"line":137,"column":16},"end":{"line":139,"column":17}},"25":{"start":{"line":138,"column":20},"end":{"line":138,"column":63}}},"branchMap":{"1":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":12}},{"start":{"line":47,"column":12},"end":{"line":47,"column":12}}]},"2":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":31},"end":{"line":109,"column":65}},{"start":{"line":109,"column":69},"end":{"line":109,"column":71}}]},"3":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":24},"end":{"line":115,"column":38}},{"start":{"line":116,"column":24},"end":{"line":116,"column":52}},{"start":{"line":117,"column":25},"end":{"line":117,"column":46}},{"start":{"line":117,"column":50},"end":{"line":117,"column":79}}]},"4":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":16},"end":{"line":137,"column":16}},{"start":{"line":137,"column":16},"end":{"line":137,"column":16}}]},"5":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":20},"end":{"line":137,"column":40}},{"start":{"line":137,"column":44},"end":{"line":137,"column":51}},{"start":{"line":137,"column":55},"end":{"line":137,"column":69}}]}},"code":["/**"," * @fileoverview A rule to disallow `this` keywords outside of classes or class-like objects."," * @author Toru Nagashima"," */","","\"use strict\";","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const astUtils = require(\"../ast-utils\");","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {","        docs: {","            description: \"disallow `this` keywords outside of classes or class-like objects\",","            category: \"Best Practices\",","            recommended: false","        },","","        schema: []","    },","","    create(context) {","        const stack = [],","            sourceCode = context.getSourceCode();","","        let insideClassProperty = false;","","        /**","         * Gets the current checking context.","         *","         * The return value has a flag that whether or not `this` keyword is valid.","         * The flag is initialized when got at the first time.","         *","         * @returns {{valid: boolean}}","         *   an object which has a flag that whether or not `this` keyword is valid.","         */","        stack.getCurrent = function() {","            const current = this[this.length - 1];","","            if (!current.init) {","                current.init = true;","                current.valid = !astUtils.isDefaultThisBinding(","                    current.node,","                    sourceCode);","            }","            return current;","        };","","        /**","         * `this` should be fair game anywhere inside a class property.","         *","         * @returns {void}","         */","        function enterClassProperty() {","            insideClassProperty = true;","        }","","        /**","         * Back to the normal check.","         * @returns {void}","         */","        function exitClassProperty() {","            insideClassProperty = false;","        }","","        /**","         * Pushs new checking context into the stack.","         *","         * The checking context is not initialized yet.","         * Because most functions don't have `this` keyword.","         * When `this` keyword was found, the checking context is initialized.","         *","         * @param {ASTNode} node - A function node that was entered.","         * @returns {void}","         */","        function enterFunction(node) {","","            // `this` can be invalid only under strict mode.","            stack.push({","                init: !context.getScope().isStrict,","                node,","                valid: true","            });","        }","","        /**","         * Pops the current checking context from the stack.","         * @returns {void}","         */","        function exitFunction() {","            stack.pop();","        }","","        return {","","            /*","             * `this` is invalid only under strict mode.","             * Modules is always strict mode.","             */","            Program(node) {","                const scope = context.getScope(),","                    features = context.parserOptions.ecmaFeatures || {};","","                stack.push({","                    init: true,","                    node,","                    valid: !(","                        scope.isStrict ||","                        node.sourceType === \"module\" ||","                        (features.globalReturn && scope.childScopes[0].isStrict)","                    )","                });","            },","","            \"Program:exit\"() {","                stack.pop();","            },","","            ClassProperty: enterClassProperty,","            \"ClassProperty:exit\": exitClassProperty,","            FunctionDeclaration: enterFunction,","            \"FunctionDeclaration:exit\": exitFunction,","            FunctionExpression: enterFunction,","            \"FunctionExpression:exit\": exitFunction,","","            // Reports if `this` of the current context is invalid.","            ThisExpression(node) {","                const current = stack.getCurrent();","","                if (!insideClassProperty && current && !current.valid) {","                    context.report(node, \"Unexpected 'this'.\");","                }","            }","        };","    }","};",""],"l":{"12":1,"18":1,"30":0,"33":0,"44":0,"45":0,"47":0,"48":0,"49":0,"53":0,"61":1,"62":0,"69":1,"70":0,"83":1,"86":0,"97":1,"98":0,"101":0,"108":0,"111":0,"123":0,"135":0,"137":0,"138":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/ast-utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/ast-utils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":1,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":0,"26":1,"27":0,"28":1,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0},"b":{"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0,0,0],"6":[0,0],"7":[0,0,0,0,0,0],"8":[0,0,0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0,0,0,0,0,0,0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0],"30":[0,0,0,0],"31":[0,0,0,0,0,0],"32":[0,0],"33":[0,0,0],"34":[0,0],"35":[0,0,0],"36":[0,0],"37":[0,0,0],"38":[0,0,0,0,0,0,0,0,0,0,0,0],"39":[0,0],"40":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0,0],"45":[0,0],"46":[0,0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0,0,0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"fnMap":{"1":{"name":"isModifyingReference","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":60}}},"2":{"name":"startsWithUpperCase","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":32}}},"3":{"name":"isES5Constructor","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":32}}},"4":{"name":"getUpperFunction","line":74,"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":32}}},"5":{"name":"isNullOrUndefined","line":90,"loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":33}}},"6":{"name":"isCallee","line":103,"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":24}}},"7":{"name":"isReflectApply","line":112,"loc":{"start":{"line":112,"column":0},"end":{"line":112,"column":30}}},"8":{"name":"isArrayFromMethod","line":128,"loc":{"start":{"line":128,"column":0},"end":{"line":128,"column":33}}},"9":{"name":"isMethodWhichHasThisArg","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":39}}},"10":{"name":"hasJSDocThisTag","line":166,"loc":{"start":{"line":166,"column":0},"end":{"line":166,"column":43}}},"11":{"name":"(anonymous_11)","line":177,"loc":{"start":{"line":177,"column":53},"end":{"line":177,"column":71}}},"12":{"name":"isParenthesised","line":189,"loc":{"start":{"line":189,"column":0},"end":{"line":189,"column":43}}},"13":{"name":"(anonymous_13)","line":211,"loc":{"start":{"line":211,"column":21},"end":{"line":211,"column":35}}},"14":{"name":"(anonymous_14)","line":227,"loc":{"start":{"line":227,"column":19},"end":{"line":227,"column":26}}},"15":{"name":"(anonymous_15)","line":248,"loc":{"start":{"line":248,"column":24},"end":{"line":248,"column":31}}},"16":{"name":"(anonymous_16)","line":258,"loc":{"start":{"line":258,"column":12},"end":{"line":258,"column":19}}},"17":{"name":"(anonymous_17)","line":271,"loc":{"start":{"line":271,"column":26},"end":{"line":271,"column":39}}},"18":{"name":"(anonymous_18)","line":282,"loc":{"start":{"line":282,"column":18},"end":{"line":282,"column":35}}},"19":{"name":"(anonymous_19)","line":291,"loc":{"start":{"line":291,"column":22},"end":{"line":291,"column":29}}},"20":{"name":"(anonymous_20)","line":311,"loc":{"start":{"line":311,"column":21},"end":{"line":311,"column":39}}},"21":{"name":"(anonymous_21)","line":348,"loc":{"start":{"line":348,"column":24},"end":{"line":348,"column":43}}},"22":{"name":"(anonymous_22)","line":484,"loc":{"start":{"line":484,"column":17},"end":{"line":484,"column":24}}},"23":{"name":"(anonymous_23)","line":583,"loc":{"start":{"line":583,"column":10},"end":{"line":583,"column":17}}},"24":{"name":"(anonymous_24)","line":598,"loc":{"start":{"line":598,"column":14},"end":{"line":598,"column":21}}},"25":{"name":"(anonymous_25)","line":633,"loc":{"start":{"line":633,"column":25},"end":{"line":633,"column":32}}},"26":{"name":"(anonymous_26)","line":676,"loc":{"start":{"line":676,"column":24},"end":{"line":676,"column":31}}},"27":{"name":"(anonymous_27)","line":724,"loc":{"start":{"line":724,"column":20},"end":{"line":724,"column":27}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":94}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":70}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":42}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":80}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":57}},"6":{"start":{"line":21,"column":0},"end":{"line":21,"column":80}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":40}},"8":{"start":{"line":32,"column":0},"end":{"line":48,"column":1}},"9":{"start":{"line":33,"column":4},"end":{"line":33,"column":44}},"10":{"start":{"line":40,"column":4},"end":{"line":41,"column":56}},"11":{"start":{"line":43,"column":4},"end":{"line":47,"column":6}},"12":{"start":{"line":56,"column":0},"end":{"line":58,"column":1}},"13":{"start":{"line":57,"column":4},"end":{"line":57,"column":45}},"14":{"start":{"line":65,"column":0},"end":{"line":67,"column":1}},"15":{"start":{"line":66,"column":4},"end":{"line":66,"column":58}},"16":{"start":{"line":74,"column":0},"end":{"line":82,"column":1}},"17":{"start":{"line":75,"column":4},"end":{"line":80,"column":5}},"18":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"19":{"start":{"line":77,"column":12},"end":{"line":77,"column":24}},"20":{"start":{"line":79,"column":8},"end":{"line":79,"column":27}},"21":{"start":{"line":81,"column":4},"end":{"line":81,"column":16}},"22":{"start":{"line":90,"column":0},"end":{"line":96,"column":1}},"23":{"start":{"line":91,"column":4},"end":{"line":95,"column":6}},"24":{"start":{"line":103,"column":0},"end":{"line":105,"column":1}},"25":{"start":{"line":104,"column":4},"end":{"line":104,"column":80}},"26":{"start":{"line":112,"column":0},"end":{"line":121,"column":1}},"27":{"start":{"line":113,"column":4},"end":{"line":120,"column":6}},"28":{"start":{"line":128,"column":0},"end":{"line":137,"column":1}},"29":{"start":{"line":129,"column":4},"end":{"line":136,"column":6}},"30":{"start":{"line":144,"column":0},"end":{"line":158,"column":1}},"31":{"start":{"line":145,"column":4},"end":{"line":155,"column":5}},"32":{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},"33":{"start":{"line":147,"column":12},"end":{"line":147,"column":54}},"34":{"start":{"line":149,"column":8},"end":{"line":152,"column":9}},"35":{"start":{"line":150,"column":12},"end":{"line":150,"column":33}},"36":{"start":{"line":151,"column":12},"end":{"line":151,"column":21}},"37":{"start":{"line":154,"column":8},"end":{"line":154,"column":14}},"38":{"start":{"line":157,"column":4},"end":{"line":157,"column":17}},"39":{"start":{"line":166,"column":0},"end":{"line":180,"column":1}},"40":{"start":{"line":167,"column":4},"end":{"line":167,"column":58}},"41":{"start":{"line":169,"column":4},"end":{"line":171,"column":5}},"42":{"start":{"line":170,"column":8},"end":{"line":170,"column":20}},"43":{"start":{"line":177,"column":4},"end":{"line":179,"column":7}},"44":{"start":{"line":178,"column":8},"end":{"line":178,"column":50}},"45":{"start":{"line":189,"column":0},"end":{"line":196,"column":1}},"46":{"start":{"line":190,"column":4},"end":{"line":191,"column":51}},"47":{"start":{"line":193,"column":4},"end":{"line":195,"column":71}},"48":{"start":{"line":202,"column":0},"end":{"line":727,"column":2}},"49":{"start":{"line":212,"column":8},"end":{"line":212,"column":58}},"50":{"start":{"line":228,"column":8},"end":{"line":231,"column":10}},"51":{"start":{"line":249,"column":8},"end":{"line":249,"column":52}},"52":{"start":{"line":259,"column":8},"end":{"line":261,"column":9}},"53":{"start":{"line":260,"column":12},"end":{"line":260,"column":42}},"54":{"start":{"line":262,"column":8},"end":{"line":262,"column":20}},"55":{"start":{"line":272,"column":8},"end":{"line":272,"column":55}},"56":{"start":{"line":283,"column":8},"end":{"line":283,"column":73}},"57":{"start":{"line":292,"column":8},"end":{"line":292,"column":42}},"58":{"start":{"line":294,"column":8},"end":{"line":301,"column":10}},"59":{"start":{"line":312,"column":8},"end":{"line":312,"column":30}},"60":{"start":{"line":314,"column":8},"end":{"line":322,"column":9}},"61":{"start":{"line":315,"column":12},"end":{"line":315,"column":49}},"62":{"start":{"line":317,"column":12},"end":{"line":319,"column":13}},"63":{"start":{"line":318,"column":16},"end":{"line":318,"column":32}},"64":{"start":{"line":321,"column":12},"end":{"line":321,"column":32}},"65":{"start":{"line":324,"column":8},"end":{"line":324,"column":20}},"66":{"start":{"line":349,"column":8},"end":{"line":351,"column":9}},"67":{"start":{"line":350,"column":12},"end":{"line":350,"column":25}},"68":{"start":{"line":352,"column":8},"end":{"line":352,"column":45}},"69":{"start":{"line":354,"column":8},"end":{"line":472,"column":9}},"70":{"start":{"line":355,"column":12},"end":{"line":355,"column":39}},"71":{"start":{"line":357,"column":12},"end":{"line":471,"column":13}},"72":{"start":{"line":365,"column":20},"end":{"line":365,"column":34}},"73":{"start":{"line":366,"column":20},"end":{"line":366,"column":26}},"74":{"start":{"line":375,"column":20},"end":{"line":375,"column":58}},"75":{"start":{"line":377,"column":20},"end":{"line":379,"column":21}},"76":{"start":{"line":378,"column":24},"end":{"line":378,"column":36}},"77":{"start":{"line":380,"column":20},"end":{"line":380,"column":39}},"78":{"start":{"line":381,"column":20},"end":{"line":381,"column":26}},"79":{"start":{"line":394,"column":20},"end":{"line":394,"column":49}},"80":{"start":{"line":403,"column":20},"end":{"line":413,"column":21}},"81":{"start":{"line":404,"column":24},"end":{"line":406,"column":25}},"82":{"start":{"line":405,"column":28},"end":{"line":405,"column":41}},"83":{"start":{"line":407,"column":24},"end":{"line":412,"column":25}},"84":{"start":{"line":411,"column":28},"end":{"line":411,"column":41}},"85":{"start":{"line":414,"column":20},"end":{"line":414,"column":32}},"86":{"start":{"line":419,"column":20},"end":{"line":424,"column":22}},"87":{"start":{"line":431,"column":20},"end":{"line":438,"column":22}},"88":{"start":{"line":445,"column":20},"end":{"line":451,"column":21}},"89":{"start":{"line":446,"column":24},"end":{"line":450,"column":26}},"90":{"start":{"line":452,"column":20},"end":{"line":458,"column":21}},"91":{"start":{"line":453,"column":24},"end":{"line":457,"column":26}},"92":{"start":{"line":459,"column":20},"end":{"line":465,"column":21}},"93":{"start":{"line":460,"column":24},"end":{"line":464,"column":26}},"94":{"start":{"line":466,"column":20},"end":{"line":466,"column":32}},"95":{"start":{"line":470,"column":20},"end":{"line":470,"column":32}},"96":{"start":{"line":475,"column":8},"end":{"line":475,"column":20},"skip":true},"97":{"start":{"line":485,"column":8},"end":{"line":566,"column":9}},"98":{"start":{"line":487,"column":16},"end":{"line":487,"column":25}},"99":{"start":{"line":492,"column":16},"end":{"line":492,"column":25}},"100":{"start":{"line":495,"column":16},"end":{"line":495,"column":25}},"101":{"start":{"line":498,"column":16},"end":{"line":505,"column":17}},"102":{"start":{"line":500,"column":24},"end":{"line":500,"column":33}},"103":{"start":{"line":502,"column":24},"end":{"line":502,"column":33}},"104":{"start":{"line":511,"column":16},"end":{"line":543,"column":17}},"105":{"start":{"line":513,"column":24},"end":{"line":513,"column":33}},"106":{"start":{"line":515,"column":24},"end":{"line":515,"column":33}},"107":{"start":{"line":517,"column":24},"end":{"line":517,"column":33}},"108":{"start":{"line":522,"column":24},"end":{"line":522,"column":33}},"109":{"start":{"line":529,"column":24},"end":{"line":529,"column":34}},"110":{"start":{"line":533,"column":24},"end":{"line":533,"column":34}},"111":{"start":{"line":536,"column":24},"end":{"line":536,"column":34}},"112":{"start":{"line":540,"column":24},"end":{"line":540,"column":34}},"113":{"start":{"line":549,"column":16},"end":{"line":549,"column":26}},"114":{"start":{"line":552,"column":16},"end":{"line":552,"column":26}},"115":{"start":{"line":557,"column":16},"end":{"line":559,"column":17}},"116":{"start":{"line":558,"column":20},"end":{"line":558,"column":30}},"117":{"start":{"line":560,"column":16},"end":{"line":560,"column":26}},"118":{"start":{"line":563,"column":16},"end":{"line":563,"column":26}},"119":{"start":{"line":567,"column":8},"end":{"line":567,"column":18}},"120":{"start":{"line":584,"column":8},"end":{"line":584,"column":63}},"121":{"start":{"line":599,"column":8},"end":{"line":599,"column":67}},"122":{"start":{"line":634,"column":8},"end":{"line":634,"column":17}},"123":{"start":{"line":636,"column":8},"end":{"line":647,"column":9}},"124":{"start":{"line":639,"column":16},"end":{"line":639,"column":32}},"125":{"start":{"line":640,"column":16},"end":{"line":640,"column":22}},"126":{"start":{"line":643,"column":16},"end":{"line":643,"column":37}},"127":{"start":{"line":644,"column":16},"end":{"line":644,"column":22}},"128":{"start":{"line":649,"column":8},"end":{"line":666,"column":9}},"129":{"start":{"line":651,"column":16},"end":{"line":651,"column":42}},"130":{"start":{"line":654,"column":16},"end":{"line":656,"column":17}},"131":{"start":{"line":655,"column":20},"end":{"line":655,"column":55}},"132":{"start":{"line":657,"column":16},"end":{"line":657,"column":22}},"133":{"start":{"line":660,"column":16},"end":{"line":662,"column":17}},"134":{"start":{"line":661,"column":20},"end":{"line":661,"column":37}},"135":{"start":{"line":663,"column":16},"end":{"line":663,"column":22}},"136":{"start":{"line":668,"column":8},"end":{"line":668,"column":20}},"137":{"start":{"line":677,"column":8},"end":{"line":677,"column":30}},"138":{"start":{"line":680,"column":8},"end":{"line":701,"column":9}},"139":{"start":{"line":689,"column":12},"end":{"line":689,"column":84}},"140":{"start":{"line":691,"column":12},"end":{"line":700,"column":13}},"141":{"start":{"line":692,"column":16},"end":{"line":699,"column":17}},"142":{"start":{"line":696,"column":20},"end":{"line":696,"column":47}},"143":{"start":{"line":698,"column":20},"end":{"line":698,"column":26}},"144":{"start":{"line":703,"column":8},"end":{"line":703,"column":26}},"145":{"start":{"line":725,"column":8},"end":{"line":725,"column":108}}},"branchMap":{"1":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":41},"end":{"line":40,"column":52}},{"start":{"line":41,"column":8},"end":{"line":41,"column":55}}]},"2":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":22}},{"start":{"line":44,"column":8},"end":{"line":44,"column":32}},{"start":{"line":45,"column":8},"end":{"line":45,"column":27}},{"start":{"line":46,"column":8},"end":{"line":46,"column":36}}]},"3":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":12},"end":{"line":66,"column":19}},{"start":{"line":66,"column":23},"end":{"line":66,"column":56}}]},"4":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":8}},{"start":{"line":76,"column":8},"end":{"line":76,"column":8}}]},"5":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":9},"end":{"line":92,"column":32}},{"start":{"line":92,"column":36},"end":{"line":92,"column":55}},{"start":{"line":93,"column":9},"end":{"line":93,"column":35}},{"start":{"line":93,"column":39},"end":{"line":93,"column":64}},{"start":{"line":94,"column":9},"end":{"line":94,"column":40}},{"start":{"line":94,"column":44},"end":{"line":94,"column":68}}]},"6":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":11},"end":{"line":104,"column":48}},{"start":{"line":104,"column":52},"end":{"line":104,"column":79}}]},"7":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":40}},{"start":{"line":115,"column":8},"end":{"line":115,"column":41}},{"start":{"line":116,"column":8},"end":{"line":116,"column":38}},{"start":{"line":117,"column":8},"end":{"line":117,"column":43}},{"start":{"line":118,"column":8},"end":{"line":118,"column":38}},{"start":{"line":119,"column":8},"end":{"line":119,"column":31}}]},"8":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":8},"end":{"line":130,"column":40}},{"start":{"line":131,"column":8},"end":{"line":131,"column":41}},{"start":{"line":132,"column":8},"end":{"line":132,"column":55}},{"start":{"line":133,"column":8},"end":{"line":133,"column":43}},{"start":{"line":134,"column":8},"end":{"line":134,"column":37}},{"start":{"line":135,"column":8},"end":{"line":135,"column":31}}]},"9":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":146,"column":8}},{"start":{"line":146,"column":8},"end":{"line":146,"column":8}}]},"10":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":8}},{"start":{"line":149,"column":8},"end":{"line":149,"column":8}}]},"11":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":12},"end":{"line":149,"column":44}},{"start":{"line":149,"column":48},"end":{"line":149,"column":62}}]},"12":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":4},"end":{"line":169,"column":4}},{"start":{"line":169,"column":4},"end":{"line":169,"column":4}}]},"13":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":8},"end":{"line":169,"column":20}},{"start":{"line":169,"column":24},"end":{"line":169,"column":63}}]},"14":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":11},"end":{"line":193,"column":46}},{"start":{"line":194,"column":8},"end":{"line":194,"column":35}},{"start":{"line":194,"column":39},"end":{"line":194,"column":78}},{"start":{"line":195,"column":8},"end":{"line":195,"column":31}},{"start":{"line":195,"column":35},"end":{"line":195,"column":70}}]},"15":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":19},"end":{"line":193,"column":32}},{"start":{"line":193,"column":36},"end":{"line":193,"column":45}}]},"16":{"line":229,"type":"binary-expr","locations":[{"start":{"line":229,"column":13},"end":{"line":229,"column":36}},{"start":{"line":229,"column":40},"end":{"line":229,"column":70}},{"start":{"line":230,"column":12},"end":{"line":230,"column":43}}]},"17":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":8},"end":{"line":259,"column":8}},{"start":{"line":259,"column":8},"end":{"line":259,"column":8}}]},"18":{"line":283,"type":"binary-expr","locations":[{"start":{"line":283,"column":15},"end":{"line":283,"column":35}},{"start":{"line":283,"column":39},"end":{"line":283,"column":72}}]},"19":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":32}},{"start":{"line":295,"column":36},"end":{"line":295,"column":68}},{"start":{"line":296,"column":12},"end":{"line":296,"column":33}},{"start":{"line":297,"column":16},"end":{"line":297,"column":48}},{"start":{"line":298,"column":16},"end":{"line":298,"column":48}},{"start":{"line":299,"column":16},"end":{"line":299,"column":48}}]},"20":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12}},{"start":{"line":317,"column":12},"end":{"line":317,"column":12}}]},"21":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":8},"end":{"line":349,"column":8}},{"start":{"line":349,"column":8},"end":{"line":349,"column":8}}]},"22":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":12},"end":{"line":349,"column":34}},{"start":{"line":349,"column":38},"end":{"line":349,"column":71}}]},"23":{"line":357,"type":"switch","locations":[{"start":{"line":363,"column":16},"end":{"line":363,"column":41}},{"start":{"line":364,"column":16},"end":{"line":366,"column":26}},{"start":{"line":374,"column":16},"end":{"line":382,"column":17}},{"start":{"line":392,"column":16},"end":{"line":392,"column":32}},{"start":{"line":393,"column":16},"end":{"line":394,"column":49}},{"start":{"line":401,"column":16},"end":{"line":401,"column":44}},{"start":{"line":402,"column":16},"end":{"line":414,"column":32}},{"start":{"line":418,"column":16},"end":{"line":424,"column":22}},{"start":{"line":430,"column":16},"end":{"line":438,"column":22}},{"start":{"line":444,"column":16},"end":{"line":466,"column":32}},{"start":{"line":469,"column":16},"end":{"line":470,"column":32}}]},"24":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":20},"end":{"line":377,"column":20}},{"start":{"line":377,"column":20},"end":{"line":377,"column":20}}]},"25":{"line":377,"type":"binary-expr","locations":[{"start":{"line":377,"column":24},"end":{"line":377,"column":37}},{"start":{"line":377,"column":41},"end":{"line":377,"column":56}}]},"26":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":20},"end":{"line":403,"column":20}},{"start":{"line":403,"column":20},"end":{"line":403,"column":20}}]},"27":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":24},"end":{"line":404,"column":24}},{"start":{"line":404,"column":24},"end":{"line":404,"column":24}}]},"28":{"line":407,"type":"if","locations":[{"start":{"line":407,"column":24},"end":{"line":407,"column":24}},{"start":{"line":407,"column":24},"end":{"line":407,"column":24}}]},"29":{"line":407,"type":"binary-expr","locations":[{"start":{"line":407,"column":28},"end":{"line":407,"column":39}},{"start":{"line":408,"column":28},"end":{"line":408,"column":61}},{"start":{"line":409,"column":28},"end":{"line":409,"column":65}}]},"30":{"line":420,"type":"binary-expr","locations":[{"start":{"line":420,"column":24},"end":{"line":420,"column":35}},{"start":{"line":421,"column":24},"end":{"line":421,"column":44}},{"start":{"line":422,"column":24},"end":{"line":422,"column":55}},{"start":{"line":423,"column":24},"end":{"line":423,"column":59}}]},"31":{"line":432,"type":"binary-expr","locations":[{"start":{"line":432,"column":24},"end":{"line":432,"column":46}},{"start":{"line":433,"column":24},"end":{"line":433,"column":61}},{"start":{"line":434,"column":24},"end":{"line":434,"column":76}},{"start":{"line":435,"column":24},"end":{"line":435,"column":41}},{"start":{"line":436,"column":24},"end":{"line":436,"column":60}},{"start":{"line":437,"column":24},"end":{"line":437,"column":69}}]},"32":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":20},"end":{"line":445,"column":20}},{"start":{"line":445,"column":20},"end":{"line":445,"column":20}}]},"33":{"line":447,"type":"binary-expr","locations":[{"start":{"line":447,"column":28},"end":{"line":447,"column":57}},{"start":{"line":448,"column":28},"end":{"line":448,"column":56}},{"start":{"line":449,"column":28},"end":{"line":449,"column":66}}]},"34":{"line":452,"type":"if","locations":[{"start":{"line":452,"column":20},"end":{"line":452,"column":20}},{"start":{"line":452,"column":20},"end":{"line":452,"column":20}}]},"35":{"line":454,"type":"binary-expr","locations":[{"start":{"line":454,"column":28},"end":{"line":454,"column":57}},{"start":{"line":455,"column":28},"end":{"line":455,"column":56}},{"start":{"line":456,"column":28},"end":{"line":456,"column":66}}]},"36":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":20},"end":{"line":459,"column":20}},{"start":{"line":459,"column":20},"end":{"line":459,"column":20}}]},"37":{"line":461,"type":"binary-expr","locations":[{"start":{"line":461,"column":28},"end":{"line":461,"column":57}},{"start":{"line":462,"column":28},"end":{"line":462,"column":56}},{"start":{"line":463,"column":28},"end":{"line":463,"column":66}}]},"38":{"line":485,"type":"switch","locations":[{"start":{"line":486,"column":12},"end":{"line":487,"column":25}},{"start":{"line":489,"column":12},"end":{"line":489,"column":40}},{"start":{"line":490,"column":12},"end":{"line":490,"column":43}},{"start":{"line":491,"column":12},"end":{"line":492,"column":25}},{"start":{"line":494,"column":12},"end":{"line":495,"column":25}},{"start":{"line":497,"column":12},"end":{"line":505,"column":17}},{"start":{"line":509,"column":12},"end":{"line":543,"column":17}},{"start":{"line":547,"column":12},"end":{"line":547,"column":35}},{"start":{"line":548,"column":12},"end":{"line":549,"column":26}},{"start":{"line":551,"column":12},"end":{"line":552,"column":26}},{"start":{"line":554,"column":12},"end":{"line":560,"column":26}},{"start":{"line":562,"column":12},"end":{"line":563,"column":26}}]},"39":{"line":498,"type":"switch","locations":[{"start":{"line":499,"column":20},"end":{"line":500,"column":33}},{"start":{"line":501,"column":20},"end":{"line":502,"column":33}}]},"40":{"line":511,"type":"switch","locations":[{"start":{"line":512,"column":20},"end":{"line":513,"column":33}},{"start":{"line":514,"column":20},"end":{"line":515,"column":33}},{"start":{"line":516,"column":20},"end":{"line":517,"column":33}},{"start":{"line":518,"column":20},"end":{"line":518,"column":30}},{"start":{"line":519,"column":20},"end":{"line":519,"column":30}},{"start":{"line":520,"column":20},"end":{"line":520,"column":31}},{"start":{"line":521,"column":20},"end":{"line":522,"column":33}},{"start":{"line":523,"column":20},"end":{"line":523,"column":29}},{"start":{"line":524,"column":20},"end":{"line":524,"column":30}},{"start":{"line":525,"column":20},"end":{"line":525,"column":29}},{"start":{"line":526,"column":20},"end":{"line":526,"column":30}},{"start":{"line":527,"column":20},"end":{"line":527,"column":30}},{"start":{"line":528,"column":20},"end":{"line":529,"column":34}},{"start":{"line":530,"column":20},"end":{"line":530,"column":30}},{"start":{"line":531,"column":20},"end":{"line":531,"column":30}},{"start":{"line":532,"column":20},"end":{"line":533,"column":34}},{"start":{"line":534,"column":20},"end":{"line":534,"column":29}},{"start":{"line":535,"column":20},"end":{"line":536,"column":34}},{"start":{"line":537,"column":20},"end":{"line":537,"column":29}},{"start":{"line":538,"column":20},"end":{"line":538,"column":29}},{"start":{"line":539,"column":20},"end":{"line":540,"column":34}}]},"41":{"line":557,"type":"if","locations":[{"start":{"line":557,"column":16},"end":{"line":557,"column":16}},{"start":{"line":557,"column":16},"end":{"line":557,"column":16}}]},"42":{"line":584,"type":"binary-expr","locations":[{"start":{"line":584,"column":23},"end":{"line":584,"column":27}},{"start":{"line":584,"column":31},"end":{"line":584,"column":61}}]},"43":{"line":599,"type":"binary-expr","locations":[{"start":{"line":599,"column":23},"end":{"line":599,"column":27}},{"start":{"line":599,"column":31},"end":{"line":599,"column":65}}]},"44":{"line":636,"type":"switch","locations":[{"start":{"line":637,"column":12},"end":{"line":637,"column":28}},{"start":{"line":638,"column":12},"end":{"line":640,"column":22}},{"start":{"line":642,"column":12},"end":{"line":644,"column":22}}]},"45":{"line":636,"type":"binary-expr","locations":[{"start":{"line":636,"column":16},"end":{"line":636,"column":20}},{"start":{"line":636,"column":24},"end":{"line":636,"column":33}}]},"46":{"line":649,"type":"switch","locations":[{"start":{"line":650,"column":12},"end":{"line":651,"column":42}},{"start":{"line":653,"column":12},"end":{"line":657,"column":22}},{"start":{"line":659,"column":12},"end":{"line":663,"column":22}}]},"47":{"line":649,"type":"binary-expr","locations":[{"start":{"line":649,"column":16},"end":{"line":649,"column":20}},{"start":{"line":649,"column":24},"end":{"line":649,"column":33}}]},"48":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":16},"end":{"line":654,"column":16}},{"start":{"line":654,"column":16},"end":{"line":654,"column":16}}]},"49":{"line":654,"type":"binary-expr","locations":[{"start":{"line":654,"column":20},"end":{"line":654,"column":49}},{"start":{"line":654,"column":53},"end":{"line":654,"column":77}}]},"50":{"line":660,"type":"if","locations":[{"start":{"line":660,"column":16},"end":{"line":660,"column":16}},{"start":{"line":660,"column":16},"end":{"line":660,"column":16}}]},"51":{"line":680,"type":"if","locations":[{"start":{"line":680,"column":8},"end":{"line":680,"column":8}},{"start":{"line":680,"column":8},"end":{"line":680,"column":8}}]},"52":{"line":681,"type":"binary-expr","locations":[{"start":{"line":681,"column":12},"end":{"line":681,"column":35}},{"start":{"line":682,"column":12},"end":{"line":682,"column":47}},{"start":{"line":683,"column":12},"end":{"line":683,"column":46}},{"start":{"line":687,"column":13},"end":{"line":687,"column":52}},{"start":{"line":687,"column":56},"end":{"line":687,"column":91}}]},"53":{"line":689,"type":"cond-expr","locations":[{"start":{"line":689,"column":57},"end":{"line":689,"column":66}},{"start":{"line":689,"column":69},"end":{"line":689,"column":83}}]},"54":{"line":692,"type":"if","locations":[{"start":{"line":692,"column":16},"end":{"line":692,"column":16}},{"start":{"line":692,"column":16},"end":{"line":692,"column":16}}]},"55":{"line":693,"type":"binary-expr","locations":[{"start":{"line":693,"column":20},"end":{"line":693,"column":60}},{"start":{"line":694,"column":20},"end":{"line":694,"column":59}}]},"56":{"line":725,"type":"binary-expr","locations":[{"start":{"line":725,"column":15},"end":{"line":725,"column":38}},{"start":{"line":725,"column":42},"end":{"line":725,"column":72}},{"start":{"line":725,"column":76},"end":{"line":725,"column":107}}]}},"code":["/**"," * @fileoverview Common utils for AST."," * @author Gyandeep Singh"," */","","\"use strict\";","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const anyFunctionPattern = /^(?:Function(?:Declaration|Expression)|ArrowFunctionExpression)$/;","const anyLoopPattern = /^(?:DoWhile|For|ForIn|ForOf|While)Statement$/;","const arrayOrTypedArrayPattern = /Array$/;","const arrayMethodPattern = /^(?:every|filter|find|findIndex|forEach|map|some)$/;","const bindOrCallOrApplyPattern = /^(?:bind|call|apply)$/;","const breakableTypePattern = /^(?:(?:Do)?While|For(?:In|Of)?|Switch)Statement$/;","const thisTagPattern = /^[\\s\\*]*@this/m;","","/**"," * Checks reference if is non initializer and writable."," * @param {Reference} reference - A reference to check."," * @param {int} index - The index of the reference in the references."," * @param {Reference[]} references - The array that the reference belongs to."," * @returns {boolean} Success/Failure"," * @private"," */","function isModifyingReference(reference, index, references) {","    const identifier = reference.identifier;","","    /*","     * Destructuring assignments can have multiple default value, so","     * possibly there are multiple writeable references for the same","     * identifier.","     */","    const modifyingDifferentIdentifier = index === 0 ||","        references[index - 1].identifier !== identifier;","","    return (identifier &&","        reference.init === false &&","        reference.isWrite() &&","        modifyingDifferentIdentifier","    );","}","","/**"," * Checks whether the given string starts with uppercase or not."," *"," * @param {string} s - The string to check."," * @returns {boolean} `true` if the string starts with uppercase."," */","function startsWithUpperCase(s) {","    return s[0] !== s[0].toLocaleLowerCase();","}","","/**"," * Checks whether or not a node is a constructor."," * @param {ASTNode} node - A function node to check."," * @returns {boolean} Wehether or not a node is a constructor."," */","function isES5Constructor(node) {","    return (node.id && startsWithUpperCase(node.id.name));","}","","/**"," * Finds a function node from ancestors of a node."," * @param {ASTNode} node - A start node to find."," * @returns {Node|null} A found function node."," */","function getUpperFunction(node) {","    while (node) {","        if (anyFunctionPattern.test(node.type)) {","            return node;","        }","        node = node.parent;","    }","    return null;","}","","/**"," * Checks whether or not a node is `null` or `undefined`."," * @param {ASTNode} node - A node to check."," * @returns {boolean} Whether or not the node is a `null` or `undefined`."," * @public"," */","function isNullOrUndefined(node) {","    return (","        (node.type === \"Literal\" && node.value === null) ||","        (node.type === \"Identifier\" && node.name === \"undefined\") ||","        (node.type === \"UnaryExpression\" && node.operator === \"void\")","    );","}","","/**"," * Checks whether or not a node is callee."," * @param {ASTNode} node - A node to check."," * @returns {boolean} Whether or not the node is callee."," */","function isCallee(node) {","    return node.parent.type === \"CallExpression\" && node.parent.callee === node;","}","","/**"," * Checks whether or not a node is `Reclect.apply`."," * @param {ASTNode} node - A node to check."," * @returns {boolean} Whether or not the node is a `Reclect.apply`."," */","function isReflectApply(node) {","    return (","        node.type === \"MemberExpression\" &&","        node.object.type === \"Identifier\" &&","        node.object.name === \"Reflect\" &&","        node.property.type === \"Identifier\" &&","        node.property.name === \"apply\" &&","        node.computed === false","    );","}","","/**"," * Checks whether or not a node is `Array.from`."," * @param {ASTNode} node - A node to check."," * @returns {boolean} Whether or not the node is a `Array.from`."," */","function isArrayFromMethod(node) {","    return (","        node.type === \"MemberExpression\" &&","        node.object.type === \"Identifier\" &&","        arrayOrTypedArrayPattern.test(node.object.name) &&","        node.property.type === \"Identifier\" &&","        node.property.name === \"from\" &&","        node.computed === false","    );","}","","/**"," * Checks whether or not a node is a method which has `thisArg`."," * @param {ASTNode} node - A node to check."," * @returns {boolean} Whether or not the node is a method which has `thisArg`."," */","function isMethodWhichHasThisArg(node) {","    while (node) {","        if (node.type === \"Identifier\") {","            return arrayMethodPattern.test(node.name);","        }","        if (node.type === \"MemberExpression\" && !node.computed) {","            node = node.property;","            continue;","        }","","        break;","    }","","    return false;","}","","/**"," * Checks whether or not a node has a `@this` tag in its comments."," * @param {ASTNode} node - A node to check."," * @param {SourceCode} sourceCode - A SourceCode instance to get comments."," * @returns {boolean} Whether or not the node has a `@this` tag in its comments."," */","function hasJSDocThisTag(node, sourceCode) {","    const jsdocComment = sourceCode.getJSDocComment(node);","","    if (jsdocComment && thisTagPattern.test(jsdocComment.value)) {","        return true;","    }","","    // Checks `@this` in its leading comments for callbacks,","    // because callbacks don't have its JSDoc comment.","    // e.g.","    //     sinon.test(/* @this sinon.Sandbox */function() { this.spy(); });","    return sourceCode.getComments(node).leading.some(function(comment) {","        return thisTagPattern.test(comment.value);","    });","}","","/**"," * Determines if a node is surrounded by parentheses."," * @param {SourceCode} sourceCode The ESLint source code object"," * @param {ASTNode} node The node to be checked."," * @returns {boolean} True if the node is parenthesised."," * @private"," */","function isParenthesised(sourceCode, node) {","    const previousToken = sourceCode.getTokenBefore(node),","        nextToken = sourceCode.getTokenAfter(node);","","    return Boolean(previousToken && nextToken) &&","        previousToken.value === \"(\" && previousToken.range[1] <= node.range[0] &&","        nextToken.value === \")\" && nextToken.range[0] >= node.range[1];","}","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","module.exports = {","","    /**","     * Determines whether two adjacent tokens are on the same line.","     * @param {Object} left - The left token object.","     * @param {Object} right - The right token object.","     * @returns {boolean} Whether or not the tokens are on the same line.","     * @public","     */","    isTokenOnSameLine(left, right) {","        return left.loc.end.line === right.loc.start.line;","    },","","    isNullOrUndefined,","    isCallee,","    isES5Constructor,","    getUpperFunction,","    isArrayFromMethod,","    isParenthesised,","","    /**","     * Checks whether or not a given node is a string literal.","     * @param {ASTNode} node - A node to check.","     * @returns {boolean} `true` if the node is a string literal.","     */","    isStringLiteral(node) {","        return (","            (node.type === \"Literal\" && typeof node.value === \"string\") ||","            node.type === \"TemplateLiteral\"","        );","    },","","    /**","     * Checks whether a given node is a breakable statement or not.","     * The node is breakable if the node is one of the following type:","     *","     * - DoWhileStatement","     * - ForInStatement","     * - ForOfStatement","     * - ForStatement","     * - SwitchStatement","     * - WhileStatement","     *","     * @param {ASTNode} node - A node to check.","     * @returns {boolean} `true` if the node is breakable.","     */","    isBreakableStatement(node) {","        return breakableTypePattern.test(node.type);","    },","","    /**","     * Gets the label if the parent node of a given node is a LabeledStatement.","     *","     * @param {ASTNode} node - A node to get.","     * @returns {string|null} The label or `null`.","     */","    getLabel(node) {","        if (node.parent.type === \"LabeledStatement\") {","            return node.parent.label.name;","        }","        return null;","    },","","    /**","     * Gets references which are non initializer and writable.","     * @param {Reference[]} references - An array of references.","     * @returns {Reference[]} An array of only references which are non initializer and writable.","     * @public","     */","    getModifyingReferences(references) {","        return references.filter(isModifyingReference);","    },","","    /**","     * Validate that a string passed in is surrounded by the specified character","     * @param  {string} val The text to check.","     * @param  {string} character The character to see if it's surrounded by.","     * @returns {boolean} True if the text is surrounded by the character, false if not.","     * @private","     */","    isSurroundedBy(val, character) {","        return val[0] === character && val[val.length - 1] === character;","    },","","    /**","     * Returns whether the provided node is an ESLint directive comment or not","     * @param {LineComment|BlockComment} node The node to be checked","     * @returns {boolean} `true` if the node is an ESLint directive comment","     */","    isDirectiveComment(node) {","        const comment = node.value.trim();","","        return (","            node.type === \"Line\" && comment.indexOf(\"eslint-\") === 0 ||","            node.type === \"Block\" && (","                comment.indexOf(\"global \") === 0 ||","                comment.indexOf(\"eslint \") === 0 ||","                comment.indexOf(\"eslint-\") === 0","            )","        );","    },","","    /**","     * Finds the variable by a given name in a given scope and its upper scopes.","     *","     * @param {escope.Scope} initScope - A scope to start find.","     * @param {string} name - A variable name to find.","     * @returns {escope.Variable|null} A found variable or `null`.","     */","    getVariableByName(initScope, name) {","        let scope = initScope;","","        while (scope) {","            const variable = scope.set.get(name);","","            if (variable) {","                return variable;","            }","","            scope = scope.upper;","        }","","        return null;","    },","","    /**","     * Checks whether or not a given function node is the default `this` binding.","     *","     * First, this checks the node:","     *","     * - The function name does not start with uppercase (it's a constructor).","     * - The function does not have a JSDoc comment that has a @this tag.","     *","     * Next, this checks the location of the node.","     * If the location is below, this judges `this` is valid.","     *","     * - The location is not on an object literal.","     * - The location is not assigned to a variable which starts with an uppercase letter.","     * - The location is not on an ES2015 class.","     * - Its `bind`/`call`/`apply` method is not called directly.","     * - The function is not a callback of array methods (such as `.forEach()`) if `thisArg` is given.","     *","     * @param {ASTNode} node - A function node to check.","     * @param {SourceCode} sourceCode - A SourceCode instance to get comments.","     * @returns {boolean} The function node is the default `this` binding.","     */","    isDefaultThisBinding(node, sourceCode) {","        if (isES5Constructor(node) || hasJSDocThisTag(node, sourceCode)) {","            return false;","        }","        const isAnonymous = node.id === null;","","        while (node) {","            const parent = node.parent;","","            switch (parent.type) {","","                /*","                 * Looks up the destination.","                 * e.g., obj.foo = nativeFoo || function foo() { ... };","                 */","                case \"LogicalExpression\":","                case \"ConditionalExpression\":","                    node = parent;","                    break;","","                // If the upper function is IIFE, checks the destination of the return value.","                // e.g.","                //   obj.foo = (function() {","                //     // setup...","                //     return function foo() { ... };","                //   })();","                case \"ReturnStatement\": {","                    const func = getUpperFunction(parent);","","                    if (func === null || !isCallee(func)) {","                        return true;","                    }","                    node = func.parent;","                    break;","                }","","                // e.g.","                //   var obj = { foo() { ... } };","                //   var obj = { foo: function() { ... } };","                //   class A { constructor() { ... } }","                //   class A { foo() { ... } }","                //   class A { get foo() { ... } }","                //   class A { set foo() { ... } }","                //   class A { static foo() { ... } }","                case \"Property\":","                case \"MethodDefinition\":","                    return parent.value !== node;","","                // e.g.","                //   obj.foo = function foo() { ... };","                //   Foo = function() { ... };","                //   [obj.foo = function foo() { ... }] = a;","                //   [Foo = function() { ... }] = a;","                case \"AssignmentExpression\":","                case \"AssignmentPattern\":","                    if (parent.right === node) {","                        if (parent.left.type === \"MemberExpression\") {","                            return false;","                        }","                        if (isAnonymous &&","                            parent.left.type === \"Identifier\" &&","                            startsWithUpperCase(parent.left.name)","                        ) {","                            return false;","                        }","                    }","                    return true;","","                // e.g.","                //   var Foo = function() { ... };","                case \"VariableDeclarator\":","                    return !(","                        isAnonymous &&","                        parent.init === node &&","                        parent.id.type === \"Identifier\" &&","                        startsWithUpperCase(parent.id.name)","                    );","","                // e.g.","                //   var foo = function foo() { ... }.bind(obj);","                //   (function foo() { ... }).call(obj);","                //   (function foo() { ... }).apply(obj, []);","                case \"MemberExpression\":","                    return (","                        parent.object !== node ||","                        parent.property.type !== \"Identifier\" ||","                        !bindOrCallOrApplyPattern.test(parent.property.name) ||","                        !isCallee(parent) ||","                        parent.parent.arguments.length === 0 ||","                        isNullOrUndefined(parent.parent.arguments[0])","                    );","","                // e.g.","                //   Reflect.apply(function() {}, obj, []);","                //   Array.from([], function() {}, obj);","                //   list.forEach(function() {}, obj);","                case \"CallExpression\":","                    if (isReflectApply(parent.callee)) {","                        return (","                            parent.arguments.length !== 3 ||","                            parent.arguments[0] !== node ||","                            isNullOrUndefined(parent.arguments[1])","                        );","                    }","                    if (isArrayFromMethod(parent.callee)) {","                        return (","                            parent.arguments.length !== 3 ||","                            parent.arguments[1] !== node ||","                            isNullOrUndefined(parent.arguments[2])","                        );","                    }","                    if (isMethodWhichHasThisArg(parent.callee)) {","                        return (","                            parent.arguments.length !== 2 ||","                            parent.arguments[0] !== node ||","                            isNullOrUndefined(parent.arguments[1])","                        );","                    }","                    return true;","","                // Otherwise `this` is default.","                default:","                    return true;","            }","        }","","        /* istanbul ignore next */","        return true;","    },","","    /**","     * Get the precedence level based on the node type","     * @param {ASTNode} node node to evaluate","     * @returns {int} precedence level","     * @private","     */","    getPrecedence(node) {","        switch (node.type) {","            case \"SequenceExpression\":","                return 0;","","            case \"AssignmentExpression\":","            case \"ArrowFunctionExpression\":","            case \"YieldExpression\":","                return 1;","","            case \"ConditionalExpression\":","                return 3;","","            case \"LogicalExpression\":","                switch (node.operator) {","                    case \"||\":","                        return 4;","                    case \"&&\":","                        return 5;","","                    // no default","                }","","                /* falls through */","","            case \"BinaryExpression\":","","                switch (node.operator) {","                    case \"|\":","                        return 6;","                    case \"^\":","                        return 7;","                    case \"&\":","                        return 8;","                    case \"==\":","                    case \"!=\":","                    case \"===\":","                    case \"!==\":","                        return 9;","                    case \"<\":","                    case \"<=\":","                    case \">\":","                    case \">=\":","                    case \"in\":","                    case \"instanceof\":","                        return 10;","                    case \"<<\":","                    case \">>\":","                    case \">>>\":","                        return 11;","                    case \"+\":","                    case \"-\":","                        return 12;","                    case \"*\":","                    case \"/\":","                    case \"%\":","                        return 13;","","                    // no default","                }","","                /* falls through */","","            case \"UnaryExpression\":","            case \"AwaitExpression\":","                return 14;","","            case \"UpdateExpression\":","                return 15;","","            case \"CallExpression\":","","                // IIFE is allowed to have parens in any position (#655)","                if (node.callee.type === \"FunctionExpression\") {","                    return -1;","                }","                return 16;","","            case \"NewExpression\":","                return 17;","","            // no default","        }","        return 18;","    },","","    /**","     * Checks whether a given node is a loop node or not.","     * The following types are loop nodes:","     *","     * - DoWhileStatement","     * - ForInStatement","     * - ForOfStatement","     * - ForStatement","     * - WhileStatement","     *","     * @param {ASTNode|null} node - A node to check.","     * @returns {boolean} `true` if the node is a loop node.","     */","    isLoop(node) {","        return Boolean(node && anyLoopPattern.test(node.type));","    },","","    /**","     * Checks whether a given node is a function node or not.","     * The following types are function nodes:","     *","     * - ArrowFunctionExpression","     * - FunctionDeclaration","     * - FunctionExpression","     *","     * @param {ASTNode|null} node - A node to check.","     * @returns {boolean} `true` if the node is a function node.","     */","    isFunction(node) {","        return Boolean(node && anyFunctionPattern.test(node.type));","    },","","    /**","     * Gets the property name of a given node.","     * The node can be a MemberExpression, a Property, or a MethodDefinition.","     *","     * If the name is dynamic, this returns `null`.","     *","     * For examples:","     *","     *     a.b           // => \"b\"","     *     a[\"b\"]        // => \"b\"","     *     a['b']        // => \"b\"","     *     a[`b`]        // => \"b\"","     *     a[100]        // => \"100\"","     *     a[b]          // => null","     *     a[\"a\" + \"b\"]  // => null","     *     a[tag`b`]     // => null","     *     a[`${b}`]     // => null","     *","     *     let a = {b: 1}            // => \"b\"","     *     let a = {[\"b\"]: 1}        // => \"b\"","     *     let a = {['b']: 1}        // => \"b\"","     *     let a = {[`b`]: 1}        // => \"b\"","     *     let a = {[100]: 1}        // => \"100\"","     *     let a = {[b]: 1}          // => null","     *     let a = {[\"a\" + \"b\"]: 1}  // => null","     *     let a = {[tag`b`]: 1}     // => null","     *     let a = {[`${b}`]: 1}     // => null","     *","     * @param {ASTNode} node - The node to get.","     * @returns {string|null} The property name if static. Otherwise, null.","     */","    getStaticPropertyName(node) {","        let prop;","","        switch (node && node.type) {","            case \"Property\":","            case \"MethodDefinition\":","                prop = node.key;","                break;","","            case \"MemberExpression\":","                prop = node.property;","                break;","","            // no default","        }","","        switch (prop && prop.type) {","            case \"Literal\":","                return String(prop.value);","","            case \"TemplateLiteral\":","                if (prop.expressions.length === 0 && prop.quasis.length === 1) {","                    return prop.quasis[0].value.cooked;","                }","                break;","","            case \"Identifier\":","                if (!node.computed) {","                    return prop.name;","                }","                break;","","            // no default","        }","","        return null;","    },","","    /**","     * Get directives from directive prologue of a Program or Function node.","     * @param {ASTNode} node - The node to check.","     * @returns {ASTNode[]} The directives found in the directive prologue.","     */","    getDirectivePrologue(node) {","        const directives = [];","","        // Directive prologues only occur at the top of files or functions.","        if (","            node.type === \"Program\" ||","            node.type === \"FunctionDeclaration\" ||","            node.type === \"FunctionExpression\" ||","","            // Do not check arrow functions with implicit return.","            // `() => \"use strict\";` returns the string `\"use strict\"`.","            (node.type === \"ArrowFunctionExpression\" && node.body.type === \"BlockStatement\")","        ) {","            const statements = node.type === \"Program\" ? node.body : node.body.body;","","            for (const statement of statements) {","                if (","                    statement.type === \"ExpressionStatement\" &&","                    statement.expression.type === \"Literal\"","                ) {","                    directives.push(statement);","                } else {","                    break;","                }","            }","        }","","        return directives;","    },","","","    /**","     * Determines whether this node is a decimal integer literal. If a node is a decimal integer literal, a dot added","     after the node will be parsed as a decimal point, rather than a property-access dot.","     * @param {ASTNode} node - The node to check.","     * @returns {boolean} `true` if this node is a decimal integer.","     * @example","     *","     * 5       // true","     * 5.      // false","     * 5.0     // false","     * 05      // false","     * 0x5     // false","     * 0b101   // false","     * 0o5     // false","     * 5e0     // false","     * '5'     // false","     */","    isDecimalInteger(node) {","        return node.type === \"Literal\" && typeof node.value === \"number\" && /^(0|[1-9]\\d*)$/.test(node.raw);","    }","};",""],"l":{"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"32":1,"33":0,"40":0,"43":0,"56":1,"57":0,"65":1,"66":0,"74":1,"75":0,"76":0,"77":0,"79":0,"81":0,"90":1,"91":0,"103":1,"104":0,"112":1,"113":0,"128":1,"129":0,"144":1,"145":0,"146":0,"147":0,"149":0,"150":0,"151":0,"154":0,"157":0,"166":1,"167":0,"169":0,"170":0,"177":0,"178":0,"189":1,"190":0,"193":0,"202":1,"212":0,"228":0,"249":0,"259":0,"260":0,"262":0,"272":0,"283":0,"292":0,"294":0,"312":0,"314":0,"315":0,"317":0,"318":0,"321":0,"324":0,"349":0,"350":0,"352":0,"354":0,"355":0,"357":0,"365":0,"366":0,"375":0,"377":0,"378":0,"380":0,"381":0,"394":0,"403":0,"404":0,"405":0,"407":0,"411":0,"414":0,"419":0,"431":0,"445":0,"446":0,"452":0,"453":0,"459":0,"460":0,"466":0,"470":0,"475":1,"485":0,"487":0,"492":0,"495":0,"498":0,"500":0,"502":0,"511":0,"513":0,"515":0,"517":0,"522":0,"529":0,"533":0,"536":0,"540":0,"549":0,"552":0,"557":0,"558":0,"560":0,"563":0,"567":0,"584":0,"599":0,"634":0,"636":0,"639":0,"640":0,"643":0,"644":0,"649":0,"651":0,"654":0,"655":0,"657":0,"660":0,"661":0,"663":0,"668":0,"677":0,"680":0,"689":0,"691":0,"692":0,"696":0,"698":0,"703":0,"725":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/semi.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-babel/node_modules/eslint-plugin-babel/rules/semi.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":54,"loc":{"start":{"line":54,"column":10},"end":{"line":54,"column":20}}},"2":{"name":"report","line":72,"loc":{"start":{"line":72,"column":8},"end":{"line":72,"column":39}}},"3":{"name":"(anonymous_3)","line":81,"loc":{"start":{"line":81,"column":22},"end":{"line":81,"column":38}}},"4":{"name":"(anonymous_4)","line":87,"loc":{"start":{"line":87,"column":22},"end":{"line":87,"column":38}}},"5":{"name":"isSemicolon","line":106,"loc":{"start":{"line":106,"column":8},"end":{"line":106,"column":36}}},"6":{"name":"isUnnecessarySemicolon","line":117,"loc":{"start":{"line":117,"column":8},"end":{"line":117,"column":51}}},"7":{"name":"isOneLinerBlock","line":141,"loc":{"start":{"line":141,"column":8},"end":{"line":141,"column":39}}},"8":{"name":"checkForSemicolon","line":159,"loc":{"start":{"line":159,"column":8},"end":{"line":159,"column":41}}},"9":{"name":"checkForSemicolonForVariableDeclaration","line":184,"loc":{"start":{"line":184,"column":8},"end":{"line":184,"column":63}}},"10":{"name":"(anonymous_10)","line":212,"loc":{"start":{"line":212,"column":34},"end":{"line":212,"column":41}}},"11":{"name":"(anonymous_11)","line":217,"loc":{"start":{"line":217,"column":36},"end":{"line":217,"column":43}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":225,"column":2}},"2":{"start":{"line":56,"column":8},"end":{"line":56,"column":44}},"3":{"start":{"line":57,"column":8},"end":{"line":57,"column":43}},"4":{"start":{"line":58,"column":8},"end":{"line":60,"column":49}},"5":{"start":{"line":72,"column":8},"end":{"line":99,"column":9}},"6":{"start":{"line":73,"column":12},"end":{"line":73,"column":60}},"7":{"start":{"line":74,"column":12},"end":{"line":76,"column":36}},"8":{"start":{"line":78,"column":12},"end":{"line":90,"column":13}},"9":{"start":{"line":79,"column":16},"end":{"line":79,"column":47}},"10":{"start":{"line":80,"column":16},"end":{"line":80,"column":30}},"11":{"start":{"line":81,"column":16},"end":{"line":83,"column":18}},"12":{"start":{"line":82,"column":20},"end":{"line":82,"column":65}},"13":{"start":{"line":85,"column":16},"end":{"line":85,"column":45}},"14":{"start":{"line":86,"column":16},"end":{"line":86,"column":32}},"15":{"start":{"line":87,"column":16},"end":{"line":89,"column":18}},"16":{"start":{"line":88,"column":20},"end":{"line":88,"column":51}},"17":{"start":{"line":92,"column":12},"end":{"line":97,"column":15}},"18":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"19":{"start":{"line":107,"column":12},"end":{"line":107,"column":72}},"20":{"start":{"line":117,"column":8},"end":{"line":134,"column":9}},"21":{"start":{"line":118,"column":12},"end":{"line":120,"column":13}},"22":{"start":{"line":119,"column":16},"end":{"line":119,"column":29}},"23":{"start":{"line":122,"column":12},"end":{"line":122,"column":66}},"24":{"start":{"line":124,"column":12},"end":{"line":126,"column":13}},"25":{"start":{"line":125,"column":16},"end":{"line":125,"column":28}},"26":{"start":{"line":128,"column":12},"end":{"line":128,"column":57}},"27":{"start":{"line":129,"column":12},"end":{"line":129,"column":59}},"28":{"start":{"line":130,"column":12},"end":{"line":130,"column":128}},"29":{"start":{"line":131,"column":12},"end":{"line":131,"column":83}},"30":{"start":{"line":133,"column":12},"end":{"line":133,"column":84}},"31":{"start":{"line":141,"column":8},"end":{"line":152,"column":9}},"32":{"start":{"line":142,"column":12},"end":{"line":142,"column":61}},"33":{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},"34":{"start":{"line":145,"column":16},"end":{"line":145,"column":29}},"35":{"start":{"line":148,"column":12},"end":{"line":148,"column":39}},"36":{"start":{"line":150,"column":12},"end":{"line":151,"column":60}},"37":{"start":{"line":159,"column":8},"end":{"line":177,"column":9}},"38":{"start":{"line":160,"column":12},"end":{"line":160,"column":60}},"39":{"start":{"line":162,"column":12},"end":{"line":176,"column":13}},"40":{"start":{"line":163,"column":16},"end":{"line":165,"column":17}},"41":{"start":{"line":164,"column":20},"end":{"line":164,"column":39}},"42":{"start":{"line":167,"column":16},"end":{"line":175,"column":17}},"43":{"start":{"line":168,"column":20},"end":{"line":170,"column":21}},"44":{"start":{"line":169,"column":24},"end":{"line":169,"column":37}},"45":{"start":{"line":172,"column":20},"end":{"line":174,"column":21}},"46":{"start":{"line":173,"column":24},"end":{"line":173,"column":43}},"47":{"start":{"line":184,"column":8},"end":{"line":194,"column":9}},"48":{"start":{"line":185,"column":12},"end":{"line":187,"column":48}},"49":{"start":{"line":189,"column":12},"end":{"line":193,"column":13}},"50":{"start":{"line":192,"column":16},"end":{"line":192,"column":40}},"51":{"start":{"line":200,"column":8},"end":{"line":222,"column":10}},"52":{"start":{"line":213,"column":16},"end":{"line":215,"column":17}},"53":{"start":{"line":214,"column":20},"end":{"line":214,"column":44}},"54":{"start":{"line":218,"column":16},"end":{"line":220,"column":17}},"55":{"start":{"line":219,"column":20},"end":{"line":219,"column":44}}},"branchMap":{"1":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":28},"end":{"line":59,"column":35}},{"start":{"line":59,"column":39},"end":{"line":59,"column":78}}]},"2":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":12},"end":{"line":78,"column":12}},{"start":{"line":78,"column":12},"end":{"line":78,"column":12}}]},"3":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":20},"end":{"line":107,"column":47}},{"start":{"line":107,"column":51},"end":{"line":107,"column":70}}]},"4":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":12},"end":{"line":118,"column":12}},{"start":{"line":118,"column":12},"end":{"line":118,"column":12}}]},"5":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":12},"end":{"line":124,"column":12}},{"start":{"line":124,"column":12},"end":{"line":124,"column":12}}]},"6":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":34},"end":{"line":130,"column":71}},{"start":{"line":130,"column":75},"end":{"line":130,"column":99}},{"start":{"line":130,"column":103},"end":{"line":130,"column":127}}]},"7":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":31},"end":{"line":131,"column":54}},{"start":{"line":131,"column":58},"end":{"line":131,"column":81}}]},"8":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":20},"end":{"line":133,"column":51}},{"start":{"line":133,"column":55},"end":{"line":133,"column":69}},{"start":{"line":133,"column":74},"end":{"line":133,"column":83}}]},"9":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":12},"end":{"line":144,"column":12}},{"start":{"line":144,"column":12},"end":{"line":144,"column":12}}]},"10":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":16},"end":{"line":144,"column":26}},{"start":{"line":144,"column":30},"end":{"line":144,"column":53}}]},"11":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":19},"end":{"line":150,"column":25}},{"start":{"line":150,"column":29},"end":{"line":150,"column":61}},{"start":{"line":151,"column":14},"end":{"line":151,"column":59}}]},"12":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":12},"end":{"line":162,"column":12}},{"start":{"line":162,"column":12},"end":{"line":162,"column":12}}]},"13":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":16},"end":{"line":163,"column":16}},{"start":{"line":163,"column":16},"end":{"line":163,"column":16}}]},"14":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":16},"end":{"line":167,"column":16}},{"start":{"line":167,"column":16},"end":{"line":167,"column":16}}]},"15":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":20},"end":{"line":168,"column":20}},{"start":{"line":168,"column":20},"end":{"line":168,"column":20}}]},"16":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":24},"end":{"line":168,"column":38}},{"start":{"line":168,"column":42},"end":{"line":168,"column":64}}]},"17":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":20},"end":{"line":172,"column":20}},{"start":{"line":172,"column":20},"end":{"line":172,"column":20}}]},"18":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":24},"end":{"line":172,"column":37}},{"start":{"line":172,"column":41},"end":{"line":172,"column":62}}]},"19":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":12},"end":{"line":189,"column":12}},{"start":{"line":189,"column":12},"end":{"line":189,"column":12}}]},"20":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":17},"end":{"line":189,"column":47}},{"start":{"line":189,"column":51},"end":{"line":189,"column":71}},{"start":{"line":190,"column":17},"end":{"line":190,"column":60}},{"start":{"line":190,"column":64},"end":{"line":190,"column":84}}]},"21":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":16},"end":{"line":213,"column":16}},{"start":{"line":213,"column":16},"end":{"line":213,"column":16}}]},"22":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":16},"end":{"line":218,"column":16}},{"start":{"line":218,"column":16},"end":{"line":218,"column":16}}]}},"code":["/**"," * @fileoverview Rule to flag missing semicolons."," * @author Nicholas C. Zakas"," */","\"use strict\";","","//------------------------------------------------------------------------------","// Rule Definition","//------------------------------------------------------------------------------","","module.exports = {","    meta: {","        docs: {","            description: \"require or disallow semicolons instead of ASI\",","            category: \"Stylistic Issues\",","            recommended: false","        },","","        fixable: \"code\",","","        schema: {","            anyOf: [","                {","                    type: \"array\",","                    items: [","                        {","                            enum: [\"never\"]","                        }","                    ],","                    minItems: 0,","                    maxItems: 1","                },","                {","                    type: \"array\",","                    items: [","                        {","                            enum: [\"always\"]","                        },","                        {","                            type: \"object\",","                            properties: {","                                omitLastInOneLineBlock: { type: \"boolean\" }","                            },","                            additionalProperties: false","                        }","                    ],","                    minItems: 0,","                    maxItems: 2","                }","            ]","        }","    },","","    create(context) {","","        const OPT_OUT_PATTERN = /^[-[(/+`]/; // One of [(/+-`","        const options = context.options[1];","        const never = context.options[0] === \"never\",","            exceptOneLine = options && options.omitLastInOneLineBlock === true,","            sourceCode = context.getSourceCode();","","        //--------------------------------------------------------------------------","        // Helpers","        //--------------------------------------------------------------------------","","        /**","         * Reports a semicolon error with appropriate location and message.","         * @param {ASTNode} node The node with an extra or missing semicolon.","         * @param {boolean} missing True if the semicolon is missing.","         * @returns {void}","         */","        function report(node, missing) {","            const lastToken = sourceCode.getLastToken(node);","            let message,","                fix,","                loc = lastToken.loc;","","            if (!missing) {","                message = \"Missing semicolon.\";","                loc = loc.end;","                fix = function(fixer) {","                    return fixer.insertTextAfter(lastToken, \";\");","                };","            } else {","                message = \"Extra semicolon.\";","                loc = loc.start;","                fix = function(fixer) {","                    return fixer.remove(lastToken);","                };","            }","","            context.report({","                node,","                loc,","                message,","                fix","            });","","        }","","        /**","         * Checks whether a token is a semicolon punctuator.","         * @param {Token} token The token.","         * @returns {boolean} True if token is a semicolon punctuator.","         */","        function isSemicolon(token) {","            return (token.type === \"Punctuator\" && token.value === \";\");","        }","","        /**","         * Check if a semicolon is unnecessary, only true if:","         *   - next token is on a new line and is not one of the opt-out tokens","         *   - next token is a valid statement divider","         * @param {Token} lastToken last token of current node.","         * @returns {boolean} whether the semicolon is unnecessary.","         */","        function isUnnecessarySemicolon(lastToken) {","            if (!isSemicolon(lastToken)) {","                return false;","            }","","            const nextToken = sourceCode.getTokenAfter(lastToken);","","            if (!nextToken) {","                return true;","            }","","            const lastTokenLine = lastToken.loc.end.line;","            const nextTokenLine = nextToken.loc.start.line;","            const isOptOutToken = OPT_OUT_PATTERN.test(nextToken.value) && nextToken.value !== \"++\" && nextToken.value !== \"--\";","            const isDivider = (nextToken.value === \"}\" || nextToken.value === \";\");","","            return (lastTokenLine !== nextTokenLine && !isOptOutToken) || isDivider;","        }","","        /**","         * Checks a node to see if it's in a one-liner block statement.","         * @param {ASTNode} node The node to check.","         * @returns {boolean} whether the node is in a one-liner block statement.","         */","        function isOneLinerBlock(node) {","            const nextToken = sourceCode.getTokenAfter(node);","","            if (!nextToken || nextToken.value !== \"}\") {","                return false;","            }","","            const parent = node.parent;","","            return parent && parent.type === \"BlockStatement\" &&","              parent.loc.start.line === parent.loc.end.line;","        }","","        /**","         * Checks a node to see if it's followed by a semicolon.","         * @param {ASTNode} node The node to check.","         * @returns {void}","         */","        function checkForSemicolon(node) {","            const lastToken = sourceCode.getLastToken(node);","","            if (never) {","                if (isUnnecessarySemicolon(lastToken)) {","                    report(node, true);","                }","            } else {","                if (!isSemicolon(lastToken)) {","                    if (!exceptOneLine || !isOneLinerBlock(node)) {","                        report(node);","                    }","                } else {","                    if (exceptOneLine && isOneLinerBlock(node)) {","                        report(node, true);","                    }","                }","            }","        }","","        /**","         * Checks to see if there's a semicolon after a variable declaration.","         * @param {ASTNode} node The node to check.","         * @returns {void}","         */","        function checkForSemicolonForVariableDeclaration(node) {","            const ancestors = context.getAncestors(),","                parentIndex = ancestors.length - 1,","                parent = ancestors[parentIndex];","","            if ((parent.type !== \"ForStatement\" || parent.init !== node) &&","                (!/^For(?:In|Of)Statement/.test(parent.type) || parent.left !== node)","            ) {","                checkForSemicolon(node);","            }","        }","","        //--------------------------------------------------------------------------","        // Public API","        //--------------------------------------------------------------------------","","        return {","            VariableDeclaration: checkForSemicolonForVariableDeclaration,","            ExpressionStatement: checkForSemicolon,","            ReturnStatement: checkForSemicolon,","            ThrowStatement: checkForSemicolon,","            DoWhileStatement: checkForSemicolon,","            DebuggerStatement: checkForSemicolon,","            BreakStatement: checkForSemicolon,","            ContinueStatement: checkForSemicolon,","            ImportDeclaration: checkForSemicolon,","            ExportAllDeclaration: checkForSemicolon,","            ClassProperty: checkForSemicolon,","            ExportNamedDeclaration(node) {","                if (!node.declaration) {","                    checkForSemicolon(node);","                }","            },","            ExportDefaultDeclaration(node) {","                if (!/(?:Class|Function)Declaration/.test(node.declaration.type)) {","                    checkForSemicolon(node);","                }","            }","        };","","    }","};",""],"l":{"11":1,"56":0,"57":0,"58":0,"72":1,"73":0,"74":0,"78":0,"79":0,"80":0,"81":0,"82":0,"85":0,"86":0,"87":0,"88":0,"92":0,"106":1,"107":0,"117":1,"118":0,"119":0,"122":0,"124":0,"125":0,"128":0,"129":0,"130":0,"131":0,"133":0,"141":1,"142":0,"144":0,"145":0,"148":0,"150":0,"159":1,"160":0,"162":0,"163":0,"164":0,"167":0,"168":0,"169":0,"172":0,"173":0,"184":1,"185":0,"189":0,"192":0,"200":0,"213":0,"214":0,"218":0,"219":0}}}